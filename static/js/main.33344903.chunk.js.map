{"version":3,"sources":["SVG.js","imageGallery.js","RWD.js","Context.js","MyGallery.js","Step.js","Form.js","Util.js","Bless.js","Info.js","App.js","serviceWorker.js","index.js"],"names":["iconMapper","left","points","right","maximize","d","minimize","play","pause","Fragment","x","y","width","height","SVG","props","strokeWidth","viewBox","icon","className","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","defaultProps","screenChangeEvents","isEnterOrSpaceKey","event","key","parseInt","keyCode","which","ImageGallery","state","currentIndex","startIndex","thumbsTranslate","currentSlideOffset","galleryWidth","thumbnailsWrapperWidth","thumbnailsWrapperHeight","isFullscreen","isPlaying","loadedImages","imageGallery","React","createRef","thumbnailsWrapper","thumbnails","imageGallerySlideWrapper","handleKeyDown","bind","handleMouseDown","handleOnSwiped","handleScreenChange","handleSwiping","onThumbnailMouseLeave","handleImageError","pauseOrPlay","renderThumbInner","renderItem","slideLeft","slideRight","toggleFullScreen","togglePlay","unthrottledSlideToIndex","slideToIndex","throttle","slideDuration","trailing","lazyLoad","lazyLoaded","this","autoPlay","window","addEventListener","initResizeObserver","addScreenChangeEvent","prevProps","prevState","items","thumbnailPosition","showThumbnails","itemsSizeChanged","length","itemsChanged","isEqual","startIndexUpdated","thumbnailsPositionChanged","showThumbnailsChanged","removeResizeObserver","handleResize","slideThumbnailBar","setState","removeEventListener","removeScreenChangeEvent","playPauseIntervalId","clearInterval","transitionTimer","clearTimeout","isTransitioning","onSlide","setTimeout","index","onThumbnailClick","thumbnailMouseOverTimer","dir","scrollingUpDown","scrollingLeftRight","LEFT","RIGHT","onScreenChange","modalFullscreen","indexDifference","totalScroll","disableThumbnailScroll","thumbElement","current","isThumbnailVertical","scrollHeight","scrollWidth","infinite","alignment","previousIndex","indexChanged","firstSlideWasPrevSlide","secondSlideWasPrevSlide","firstSlideIsNextSlide","secondSlideIsNextSlide","swipingEnded","translateX","direction","gallerySlideWrapperHeight","slideStyle","useTranslate3D","isRTL","baseTranslateX","totalSlides","getTranslateXForTwoSlide","translate","Object","assign","WebkitTransform","MozTransform","msTransform","OTransform","transform","verticalTranslateValue","slideOnThumbnailOver","onClick","onTouchMove","onTouchEnd","onTouchStart","onMouseOver","onMouseLeave","showBullets","slides","bullets","forEach","item","getAlignmentClassName","originalClass","thumbnailClass","handleRenderItem","handleRenderThumbInner","showItem","slideStyle_tmp","getSlideStyle","shouldPushSlideOnInfiniteMode","slide","original","tabIndex","style","onKeyUp","handleSlideKeyUp","onFocus","role","push","igThumbnailClass","clsx","active","type","aria-pressed","aria-label","handleThumbnailMouseOver","handleThumbnailKeyUp","igBulletClass","bulletClass","bulletOnClick","itemIndex","call","Math","abs","slideIsTransitioning","ignoreIsTransitioning","isFirstOrLastSlide","setThumbsTranslate","scroll","getThumbsTranslate","canSlideNext","canSlidePrevious","absX","preventDefaultTouchmoveEvent","disableSwipe","stopPropagation","swipingTransitionDuration","setScrollDirection","cancelable","preventDefault","side","swipingTransition","transition","swipeThreshold","velocity","flickThreshold","swipeDirection","isFlick","handleOnSwipedTo","slideTo","sufficientSwipe","canSlideLeft","canSlideRight","classList","add","disableKeyDown","useBrowserFullscreen","remove","exitFullScreen","onErrorImageURL","target","src","indexOf","resizeObserver","unobserve","offsetWidth","offsetHeight","element","ResizeObserver","debounce","entries","observe","fullScreen","fullScreenElement","document","fullscreenElement","msFullscreenElement","mozFullScreenElement","webkitFullscreenElement","onBeforeSlide","slideCount","nextIndex","onSliding","slideNext","slidePrevious","onThumbnailMouseOver","eventName","gallery","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","setModalFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","shouldCallOnPlay","onPlay","slideInterval","setInterval","max","shouldCallOnPause","onPause","onImageLoad","onImageError","itemSrc","fullscreen","imageSet","onLoad","handleImageLoaded","onError","map","source","srcSet","media","alt","originalAlt","sizes","title","originalTitle","description","handleThumbnailError","onThumbnailError","thumbnail","thumbnailAlt","thumbnailTitle","thumbnailLabel","additionalClass","indexSeparator","renderFullscreenButton","renderCustomControls","renderLeftNav","renderRightNav","showFullscreenButton","showIndex","showNav","showPlayButton","renderPlayPauseButton","thumbnailStyle","getThumbnailStyle","getSlideItems","slideWrapperClass","slideWrapper","ref","canSlide","delta","onSwiping","onSwiped","igClass","igContentClass","thumbnailWrapperClass","aria-live","getThumbnailBarHeight","Component","disabled","useRWD","useMedia","queries","small","medium","large","Global","createContext","navHeight","useNavHeight","useContext","CustomImageRender","memo","cssSmall","notSmall","css","matches","images","MyGallery","styleHeight","innerHeight","MyFonts","createGlobalStyle","options","backgroundColor","StepGroup","forwardRef","stepperRef","useRef","render","children","stepper","useImperativeHandle","useEffect","Stepper","position","header","flatMap","i","slice","content","StepHeader","data-target","name","svg","StepContent","Step","Radio","errors","useFormContext","Form","Group","as","Col","Label","error","option","Check","id","label","value","NumSpinner","useState","setValue","num","e","color","min","readOnly","NameControl","context","FormContext","Control","controlId","byString","o","s","a","replace","split","n","k","ErrorMsg","display","message","Loading","top","hide","fill-rule","stroke-width","stroke-opacity","cx","cy","r","attributeName","from","to","dur","repeatCount","CustomGoogleForm","disable","setDisable","methods","useForm","mode","register","trigger","reset","getValues","formState","htmlElRef","minusOffset","scrollTo","offsetTop","useScroll","executeScroll","elementToScrollRef","FORM_URL","submit","data","obj","payload","newObj","formatKey","requestOptions","method","headers","body","URLSearchParams","toString","fetch","then","response","ok","Swal","fire","getControl","catch","err","text","finally","validate","names","callback","lastPageOffset","url","onSubmit","margin","textAlign","required","test","onChange","placeholder","pattern","Button","next","custom","variant","Bless","setData","init","setInit","axios","get","result","initData","postiion","breakpointCols","default","1100","700","500","columnClassName","Card","borderRadius","Body","Title","Text","msg","iOS","navigator","platform","GoogleMap","frameBorder","allowFullScreen","aria-hidden","Info","size","setSize","useLayoutEffect","updateSize","innerWidth","useWindowSize","zoom","setZoom","ios","Row","sm","md","backgroundImage","border","borderWidth","borderColor","fontFamily","fontSize","Container","marginTop","Youtube","allow","NavBar","elem","useDomSize","onHeightChnage","Navbar","sticky","collapseOnSelect","bg","fixed","Brand","href","opacity","Nav","Link","enableBackground","fillRule","LENGTH","fromTop","minus","ParallaxImg","class","ImagePage","maxWidth","padding","App","setNavHeight","Provider","Boolean","location","hostname","match","console","log","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"yTAeMA,EAAa,CACjBC,KAbW,8BAAUC,OAAO,oBAc5BC,MAbY,8BAAUD,OAAO,mBAc7BE,SAbe,0BAAMC,EAAE,kGAcvBC,SAbe,0BAAMD,EAAE,kGAcvBE,KAbW,6BAASL,OAAO,uBAc3BM,MAZA,kBAAC,IAAMC,SAAP,KACE,0BAAMC,EAAE,IAAIC,EAAE,IAAIC,MAAM,IAAIC,OAAO,OACnC,0BAAMH,EAAE,KAAKC,EAAE,IAAIC,MAAM,IAAIC,OAAO,SAalCC,EAAM,SAACC,GAAW,IAEpBC,EAGED,EAHFC,YACAC,EAEEF,EAFFE,QACAC,EACEH,EADFG,KAEF,OACE,yBACEC,UAAU,oBACVC,MAAM,6BACNH,QAASA,EACTI,KAAK,OACLC,OAAO,eACPN,YAAaA,EACbO,cAAc,QACdC,eAAe,SAEdxB,EAAWkB,KAkBlBJ,EAAIW,aAAe,CACjBT,YAAa,EACbC,QAAS,aAGIH,QC7CTY,EAAqB,CACzB,mBACA,qBACA,sBACA,0BAQF,SAASC,EAAkBC,GACzB,IAAMC,EAAMC,SAASF,EAAMG,SAAWH,EAAMI,OAAS,EAAG,IAGxD,OAFuB,KAEhBH,GADmB,KACOA,E,IAGdI,E,kDAqKnB,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IACDmB,MAAQ,CACXC,aAAcpB,EAAMqB,WACpBC,gBAAiB,EACjBC,mBAAoB,EACpBC,aAAc,EACdC,uBAAwB,EACxBC,wBAAyB,EACzBC,cAAc,EACdC,WAAW,GAEb,EAAKC,aAAe,GACpB,EAAKC,aAAeC,IAAMC,YAC1B,EAAKC,kBAAoBF,IAAMC,YAC/B,EAAKE,WAAaH,IAAMC,YACxB,EAAKG,yBAA2BJ,IAAMC,YAGtC,EAAKI,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,mBAAqB,EAAKA,mBAAmBH,KAAxB,gBAC1B,EAAKI,cAAgB,EAAKA,cAAcJ,KAAnB,gBACrB,EAAKK,sBAAwB,EAAKA,sBAAsBL,KAA3B,gBAC7B,EAAKM,iBAAmB,EAAKA,iBAAiBN,KAAtB,gBACxB,EAAKO,YAAc,EAAKA,YAAYP,KAAjB,gBACnB,EAAKQ,iBAAmB,EAAKA,iBAAiBR,KAAtB,gBACxB,EAAKS,WAAa,EAAKA,WAAWT,KAAhB,gBAClB,EAAKU,UAAY,EAAKA,UAAUV,KAAf,gBACjB,EAAKW,WAAa,EAAKA,WAAWX,KAAhB,gBAClB,EAAKY,iBAAmB,EAAKA,iBAAiBZ,KAAtB,gBACxB,EAAKa,WAAa,EAAKA,WAAWb,KAAhB,gBAGlB,EAAKc,wBAA0B,EAAKC,aACpC,EAAKA,aAAeC,IAClB,EAAKF,wBAAyBnD,EAAMsD,cAAe,CAAEC,UAAU,IAG7DvD,EAAMwD,WACR,EAAKC,WAAa,IAzCH,E,gEA8CIC,KAAK1D,MAAlB2D,UAEND,KAAKlE,OAEPoE,OAAOC,iBAAiB,UAAWH,KAAKtB,eACxCwB,OAAOC,iBAAiB,YAAaH,KAAKpB,iBAC1CoB,KAAKI,mBAAmBJ,KAAKvB,0BAC7BuB,KAAKK,yB,yCAGYC,EAAWC,GAAY,IAAD,EAQnCP,KAAK1D,MANPkE,EAFqC,EAErCA,MACAV,EAHqC,EAGrCA,SACAF,EAJqC,EAIrCA,cACAjC,EALqC,EAKrCA,WACA8C,EANqC,EAMrCA,kBACAC,EAPqC,EAOrCA,eAEMhD,EAAiBsC,KAAKvC,MAAtBC,aACFiD,EAAmBL,EAAUE,MAAMI,SAAWJ,EAAMI,OACpDC,GAAgBC,IAAQR,EAAUE,MAAOA,GACzCO,EAAoBT,EAAU3C,aAAeA,EAC7CqD,EAA4BV,EAAUG,oBAAsBA,EAC5DQ,EAAwBX,EAAUI,iBAAmBA,EAEvDM,IAEFhB,KAAKkB,uBACLlB,KAAKI,mBAAmBJ,KAAKvB,4BAG3BkC,GAAoBM,IACtBjB,KAAKmB,eAEHZ,EAAU7C,eAAiBA,GAC7BsC,KAAKoB,kBAAkBb,EAAU7C,cAG/B4C,EAAUV,gBAAkBA,IAC9BI,KAAKN,aAAeC,IAClBK,KAAKP,wBAAyBG,EAAe,CAAEC,UAAU,MAGzDC,GAAcQ,EAAUR,WAAYe,IACtCb,KAAKD,WAAa,KAGhBgB,GAAqBF,IAGvBb,KAAKqB,SAAS,CAAE3D,aAAcC,M,6CAKhCuC,OAAOoB,oBAAoB,UAAWtB,KAAKtB,eAC3CwB,OAAOoB,oBAAoB,YAAatB,KAAKpB,iBAC7CoB,KAAKuB,0BACLvB,KAAKkB,uBACDlB,KAAKwB,sBACPtB,OAAOuB,cAAczB,KAAKwB,qBAC1BxB,KAAKwB,oBAAsB,MAEzBxB,KAAK0B,iBACPxB,OAAOyB,aAAa3B,KAAK0B,mB,kCAIhB,IAAD,SACgC1B,KAAKvC,MAAvCC,EADE,EACFA,aAAckE,EADZ,EACYA,gBADZ,EAEyB5B,KAAK1D,MAAhCuF,EAFE,EAEFA,QAASjC,EAFP,EAEOA,cACjBI,KAAK0B,gBAAkBxB,OAAO4B,YAAW,WACnCF,IACF,EAAKP,SAAS,CAAEO,iBAAkBA,IAC9BC,GACFA,EAAQnE,MAGXkC,EAAgB,M,uCAGJzC,EAAO4E,GAAQ,IACtBC,EAAqBhC,KAAK1D,MAA1B0F,iBACRhC,KAAKN,aAAaqC,EAAO5E,GACrB6E,GACFA,EAAiB7E,EAAO4E,K,2CAIP5E,EAAO4E,GAAQ,IAAD,OAC7B/B,KAAKiC,0BACP/B,OAAOyB,aAAa3B,KAAKiC,yBACzBjC,KAAKiC,wBAA0B,MAEjCjC,KAAKiC,wBAA0B/B,OAAO4B,YAAW,WAC/C,EAAKpC,aAAaqC,GAClB,EAAKhG,UACJ,O,8CAIH,GAAIiE,KAAKiC,wBAAyB,CAAC,IACzBhC,EAAaD,KAAK1D,MAAlB2D,SACRC,OAAOyB,aAAa3B,KAAKiC,yBACzBjC,KAAKiC,wBAA0B,KAC3BhC,GACFD,KAAKlE,U,yCAKQoG,GAAM,IAAD,EAC0BlC,KAAKvC,MAA7C0E,EADc,EACdA,gBAAiBC,EADH,EACGA,mBAEpBD,GAAoBC,IACnBF,IAAQG,KAAQH,IAAQI,IAC1BtC,KAAKqB,SAAS,CAAEe,oBAAoB,IAEpCpC,KAAKqB,SAAS,CAAEc,iBAAiB,O,yCAKpBvE,GACjBoC,KAAKqB,SAAS,CAAEzD,sB,yCAGCH,GAAQ,IACjB8E,EAAmBvC,KAAK1D,MAAxBiG,eACRvC,KAAKqB,SAAS,CAAEmB,gBAAiB/E,IAE7B8E,GACFA,EAAe9E,K,yCAIAgF,GAAkB,IAG/BC,EAH8B,EACQ1C,KAAK1D,MAAvCqG,EAD0B,EAC1BA,uBAAwBnC,EADE,EACFA,MADE,EAE0BR,KAAKvC,MAAzDM,EAF0B,EAE1BA,uBAAwBC,EAFE,EAEFA,wBAE1B4E,EAAe5C,KAAKxB,YAAcwB,KAAKxB,WAAWqE,QAExD,GAAIF,EAAwB,OAAO,EAEnC,GAAIC,EAAc,CAEhB,GAAI5C,KAAK8C,sBAAuB,CAC9B,GAAIF,EAAaG,cAAgB/E,EAC/B,OAAO,EAET0E,EAAcE,EAAaG,aAAe/E,MACrC,CACL,GAAI4E,EAAaI,aAAejF,GAA0BA,GAA0B,EAClF,OAAO,EAET2E,EAAcE,EAAaI,YAAcjF,EAI3C,OAAO0E,GADgBC,GAAelC,EAAMI,OAAS,IAGvD,OAAO,I,4CAGamB,GAAO,IAEnBrE,EAAiBsC,KAAKvC,MAAtBC,aAFmB,EAGCsC,KAAK1D,MAAzB2G,EAHmB,EAGnBA,SAAUzC,EAHS,EAGTA,MACd0C,EAAY,GAKhB,OAAQnB,GACN,KAAMrE,EAAe,EACnBwF,EAAS,WANS,QAOlB,MACF,KAAMxF,EACJwF,EAAS,WARW,UASpB,MACF,KAAMxF,EAAe,EACnBwF,EAAS,WAVU,SA0BvB,OAVI1C,EAAMI,QAAU,GAAKqC,IACT,IAAVlB,GAAerE,IAAiB8C,EAAMI,OAAS,EAEjDsC,EAAS,WAnBU,SAoBVnB,IAAUvB,EAAMI,OAAS,GAAsB,IAAjBlD,IAEvCwF,EAAS,WAxBS,UA4BfA,I,+CAGgBnB,GAAO,MAE8B/B,KAAKvC,MAAzDC,EAFsB,EAEtBA,aAAcG,EAFQ,EAERA,mBAAoBsF,EAFZ,EAEYA,cACpCC,EAAe1F,IAAiByF,EAChCE,EAAmC,IAAVtB,GAAiC,IAAlBoB,EACxCG,EAAoC,IAAVvB,GAAiC,IAAlBoB,EACzCI,EAAkC,IAAVxB,GAAgC,IAAjBrE,EACvC8F,EAAmC,IAAVzB,GAAgC,IAAjBrE,EACxC+F,EAAsC,IAAvB5F,EAEjB6F,GADoB,IAAMhG,EACa,IAARqE,EAAelE,EAqClD,OAjCIA,EAAqB,EACvBmC,KAAK2D,UAAY,OACR9F,EAAqB,IAC9BmC,KAAK2D,UAAY,SAMfH,GAA0B3F,EAAqB,IACjD6F,GAAc,IAAM7F,GAElB0F,GAAyB1F,EAAqB,IAChD6F,EAAa,IAAM7F,GAGjBuF,EAEEC,GAA0BI,GAAmC,SAAnBzD,KAAK2D,UACjDD,EAAa,IACJJ,GAA2BG,GAAmC,UAAnBzD,KAAK2D,YACzDD,GAAc,MAIZF,GAA0BC,GAAmC,SAAnBzD,KAAK2D,YACjDD,GAAc,KAEZH,GAAyBE,GAAmC,UAAnBzD,KAAK2D,YAChDD,EAAa,MAIVA,I,8CAIP,OAAI1D,KAAK8C,sBAEA,CAAE1G,OAD6B4D,KAAKvC,MAAnCmG,2BAGH,K,oCAGK7B,GAAQ,IAAD,EACsC/B,KAAKvC,MAAtDC,EADW,EACXA,aAAcG,EADH,EACGA,mBAAoBgG,EADvB,EACuBA,WADvB,EAOf7D,KAAK1D,MAJP2G,EAHiB,EAGjBA,SACAzC,EAJiB,EAIjBA,MACAsD,EALiB,EAKjBA,eACAC,EANiB,EAMjBA,MAEIC,GAAkB,IAAMtG,EACxBuG,EAAczD,EAAMI,OAAS,EAI/B8C,GAAcM,EAA0B,IAARjC,IAAiBgC,GAAS,EAAI,GAAKlG,EAEnEoF,GAAYzC,EAAMI,OAAS,IACR,IAAjBlD,GAAsBqE,IAAUkC,EAGlCP,GAAc,KAAOK,GAAS,EAAI,GAAKlG,EAC9BH,IAAiBuG,GAAyB,IAAVlC,IAGzC2B,EAAa,KAAOK,GAAS,EAAI,GAAKlG,IAKtCoF,GAA6B,IAAjBzC,EAAMI,SACpB8C,EAAa1D,KAAKkE,yBAAyBnC,IAG7C,IAAIoC,EAAS,oBAAgBT,EAAhB,SAMb,OAJII,IACFK,EAAS,sBAAkBT,EAAlB,aAGJU,OAAOC,OAAO,GAAI,CACvBC,gBAAiBH,EACjBI,aAAcJ,EACdK,YAAaL,EACbM,WAAYN,EACZO,UAAWP,GACVN,K,wCAKH,OADyB7D,KAAKvC,MAAtBC,e,0CAKR,IAAIyG,EADc,EAEgBnE,KAAK1D,MAA/BwH,EAFU,EAEVA,eAAgBC,EAFN,EAEMA,MAChBnG,EAAoBoC,KAAKvC,MAAzBG,gBACF+G,EAAyBZ,GAA2B,EAAnBnG,EAAuBA,EAa9D,OAXIoC,KAAK8C,uBACPqB,EAAS,uBAAmBvG,EAAnB,OACLkG,IACFK,EAAS,yBAAqBvG,EAArB,aAGXuG,EAAS,oBAAgBQ,EAAhB,UACLb,IACFK,EAAS,sBAAkBQ,EAAlB,eAGN,CACLL,gBAAiBH,EACjBI,aAAcJ,EACdK,YAAaL,EACbM,WAAYN,EACZO,UAAWP,K,sCAIE,IAAD,OAENzG,EAAiBsC,KAAKvC,MAAtBC,aAFM,EAkBVsC,KAAK1D,MAdP2G,EAJY,EAIZA,SACAzC,EALY,EAKZA,MACAoE,EANY,EAMZA,qBACAC,EAPY,EAOZA,QACA/E,EARY,EAQZA,SACAgF,EATY,EASZA,YACAC,EAVY,EAUZA,WACAC,EAXY,EAWZA,aACAC,EAZY,EAYZA,YACAC,EAbY,EAaZA,aACA9F,EAdY,EAcZA,WACAD,EAfY,EAeZA,iBACAuB,EAhBY,EAgBZA,eACAyE,EAjBY,EAiBZA,YAGIC,EAAS,GACT5G,EAAa,GACb6G,EAAU,GAkGhB,OAhGA7E,EAAM8E,SAAQ,SAACC,EAAMxD,GACnB,IAAMmB,EAAY,EAAKsC,sBAAsBzD,GACvC0D,EAAgBF,EAAKE,cAAL,WAAyBF,EAAKE,eAAkB,GAChEC,EAAiBH,EAAKG,eAAL,WAA0BH,EAAKG,gBAAmB,GACnEC,EAAmBJ,EAAKnG,YAAcA,GAAc,EAAKA,WACzDwG,EAAyBL,EAAKpG,kBAC/BA,GAAoB,EAAKA,iBAExB0G,GAAY/F,GAAYoD,GAAa,EAAKnD,WAAWgC,GACvD8D,GAAY/F,IAAa,EAAKC,WAAWgC,KAC3C,EAAKhC,WAAWgC,IAAS,GAG3B,IAAM+D,EAAiB,EAAKC,cAAchE,GACpC8B,EAAaZ,GAAW,EAAK+C,8BAA8BjE,GAAQ+D,EAAe1B,OAAOC,OAAOyB,EAAe,CAAC,QAAU,SAE1HG,EACJ,yBACE7I,IAAG,gBAAWmI,EAAKW,SAAhB,YAA4BnE,GAC/BoE,SAAS,KACTzJ,UAAS,8BAAyBwG,EAAzB,YAAsCuC,GAC/CW,MAAOvC,EACPgB,QAASA,EACTwB,QAAS,EAAKC,iBACdxB,YAAaA,EACbC,WAAYA,EACZC,aAAcA,EACdC,YAAaA,EACbsB,QAAStB,EACTC,aAAcA,EACdsB,KAAK,UAEJX,EAAWF,EAAiBJ,GAAQ,yBAAKa,MAAO,CAAEhK,OAAQ,WAa/D,GANIgJ,EAAOqB,KAAKR,GAMZvF,EAAgB,CAClB,IAAMgG,EAAmBC,YACvB,0BACAjB,EACA,CAAEkB,OAAQlJ,IAAiBqE,IAE7BvD,EAAWiI,KACT,4BACErJ,IAAG,oBAAemI,EAAKW,SAApB,YAAgCnE,GACnC8E,KAAK,SACLV,SAAS,IACTW,eAAcpJ,IAAiBqE,EAAQ,OAAS,QAChDgF,aAAA,sBAA2BhF,EAAQ,GACnCrF,UAAWgK,EACXxB,aAAcN,EAAuB,EAAK5F,sBAAwB,KAClEiG,YAAa,SAAA9H,GAAK,OAAI,EAAK6J,yBAAyB7J,EAAO4E,IAC3DwE,QAAS,SAAApJ,GAAK,OAAI,EAAK6J,yBAAyB7J,EAAO4E,IACvDsE,QAAS,SAAAlJ,GAAK,OAAI,EAAK8J,qBAAqB9J,EAAO4E,IACnD8C,QAAS,SAAA1H,GAAK,OAAI,EAAK6E,iBAAiB7E,EAAO4E,KAE9C6D,EAAuBL,KAK9B,GAAIJ,EAAa,CAEf,IAMM+B,EAAgBP,YACpB,uBACApB,EAAK4B,YACL,CAAEP,OAAQlJ,IAAiBqE,IAE7BsD,EAAQoB,KACN,4BACEI,KAAK,SACLzJ,IAAG,iBAAYmI,EAAKW,SAAjB,YAA6BnE,GAChCrF,UAAWwK,EACXrC,QAhBkB,SAAC1H,GAIrB,OAHIoI,EAAK6B,eACP7B,EAAK6B,cAAc,CAAE7B,OAAM8B,UAAWtF,EAAOrE,iBAExC,EAAKgC,aAAa4H,KAAK,EAAMvF,EAAO5E,IAazC2J,eAAcpJ,IAAiBqE,EAAQ,OAAS,QAChDgF,aAAA,sBAA2BhF,EAAQ,UAMpC,CACLqD,SACA5G,aACA6G,a,8CAIoB,IAKd7E,EAAUR,KAAK1D,MAAfkE,MALc,EAMkBR,KAAKvC,MAArC0F,EANc,EAMdA,cAAezF,EAND,EAMCA,aACjBuG,EAAczD,EAAMI,OAAS,EAMnC,OAJ2C2G,KAAKC,IAAIrE,EAAgBzF,GAAgB,KAChC,IAAlByF,GAAuBzF,IAAiBuG,MACxCd,IAAkBc,GAAgC,IAAjBvG,K,yCAOlDqE,GAKjB,OAFoBA,IAFF/B,KAAK1D,MAAfkE,MACkBI,OAAS,GAEJ,IAAVmB,I,2CAKFA,GAAO,MAK+B/B,KAAKvC,MAAtDmE,EALkB,EAKlBA,gBAAiBuB,EALC,EAKDA,cAAezF,EALd,EAKcA,aAExC,OAAOkE,KADiCG,IAAUoB,GAAiBpB,IAAUrE,K,oDAIjDqE,GAa5B,OAAQ/B,KAAKyH,qBAAqB1F,IAC5B/B,KAAK0H,0BAA4B1H,KAAK2H,mBAAmB5F,K,wCAG/CoB,GAAgB,IAAD,EACWnD,KAAKvC,MAAvCG,EADuB,EACvBA,gBAAiBF,EADM,EACNA,aACzB,GAAqB,IAAjBA,EACFsC,KAAK4H,mBAAmB,OACnB,CACL,IAAMnF,EAAkB8E,KAAKC,IAAIrE,EAAgBzF,GAC3CmK,EAAS7H,KAAK8H,mBAAmBrF,GACnCoF,EAAS,IACP1E,EAAgBzF,EAClBsC,KAAK4H,mBAAmBhK,EAAkBiK,GACjC1E,EAAgBzF,GACzBsC,KAAK4H,mBAAmBhK,EAAkBiK,O,iCAQhD,OADkB7H,KAAK1D,MAAfkE,MACKI,QAAU,I,qCAGT,IAAD,EACeZ,KAAK1D,MAAzB2G,EADK,EACLA,SAAUc,EADL,EACKA,MAClB,OAAOd,IAAac,EAAQ/D,KAAK+H,eAAiB/H,KAAKgI,sB,sCAGxC,IAAD,EACchI,KAAK1D,MAAzB2G,EADM,EACNA,SAAUc,EADJ,EACIA,MAClB,OAAOd,IAAac,EAAQ/D,KAAKgI,mBAAqBhI,KAAK+H,kB,yCAK3D,OADyB/H,KAAKvC,MAAtBC,aACc,I,qCAMtB,OAFyBsC,KAAKvC,MAAtBC,aACUsC,KAAK1D,MAAfkE,MACoBI,OAAS,I,uCAGF,IAArBzD,EAAoB,EAApBA,MAAO8K,EAAa,EAAbA,KAAM/F,EAAO,EAAPA,IAAO,EACsClC,KAAK1D,MAArE4L,EAD0B,EAC1BA,6BAA8BC,EADJ,EACIA,aAAcC,EADlB,EACkBA,gBADlB,EAO9BpI,KAAKvC,MAJPK,EAHgC,EAGhCA,aACA8D,EAJgC,EAIhCA,gBACAO,EALgC,EAKhCA,gBACAC,EANgC,EAMhCA,mBAGF,IAAI+F,EAAJ,CATkC,IAU1BE,EAA8BrI,KAAK1D,MAAnC+L,0BAMR,GALArI,KAAKsI,mBAAmBpG,GACpBkG,GAAiBjL,EAAMiL,mBACtBF,GAAgC9F,IAAuBjF,EAAMoL,YAChEpL,EAAMqL,iBAEH5G,GAAoBO,EAkBvBnC,KAAKqB,SAAS,CAAExD,mBAAoB,QAlBI,CACxC,IAAM4K,EAAOvG,IAAQI,IAAQ,GAAK,EAE9BzE,EAAsBoK,EAAOnK,EAAe,IAC5CyJ,KAAKC,IAAI3J,IAAuB,MAClCA,EAAqB,KAGvB,IAAM6K,EAAoB,CACxBC,WAAW,aAAD,OAAeN,EAAf,gBAGZrI,KAAKqB,SAAS,CACZxD,mBAAoB4K,EAAO5K,EAC3BgG,WAAY6E,Q,wCAQC,IACT7K,EAAuBmC,KAAKvC,MAA5BI,mBACA+K,EAAmB5I,KAAK1D,MAAxBsM,eACR,OAAOrB,KAAKC,IAAI3J,GAAsB+K,I,wCAGE,IAAzBzL,EAAwB,EAAxBA,MAAO+E,EAAiB,EAAjBA,IAAK2G,EAAY,EAAZA,SAAY,EACmB7I,KAAK1D,MAAvD6L,EAD+B,EAC/BA,aAAcC,EADiB,EACjBA,gBAAiBU,EADA,EACAA,eADA,EAES9I,KAAKvC,MAA7C0E,EAF+B,EAE/BA,gBAAiBC,EAFc,EAEdA,mBAEzB,IAAI+F,EAAJ,CAJuC,IAM/BpE,EAAU/D,KAAK1D,MAAfyH,MAYR,GAXIqE,GAAiBjL,EAAMiL,kBACvBjG,GAEFnC,KAAKqB,SAAS,CAAEc,iBAAiB,IAG/BC,GAEFpC,KAAKqB,SAAS,CAAEe,oBAAoB,KAGjCD,EAAiB,CAEpB,IAAM4G,GAAkB7G,IAAQG,IAAO,GAAK,IAAM0B,GAAS,EAAI,GACzDiF,EAAUH,EAAWC,EAC3B9I,KAAKiJ,iBAAiBF,EAAgBC,O,uCAIzBD,EAAgBC,GAAU,IAAD,EACEhJ,KAAKvC,MAAvCC,EADgC,EAChCA,aAAckE,EADkB,EAClBA,gBAClBsH,EAAUxL,GAETsC,KAAKmJ,oBAAqBH,GAAapH,IAE1CsH,GAAWH,KAIY,IAApBA,IAA0B/I,KAAKoJ,gBACT,IAAnBL,IAAyB/I,KAAKqJ,mBACpCH,EAAUxL,GAGZsC,KAAKP,wBAAwByJ,K,wCAK7BlJ,KAAK5B,aAAayE,QAAQyG,UAAUC,IAAI,+B,oCAG5BpM,GAAQ,IAAD,EAC8B6C,KAAK1D,MAA9CkN,EADW,EACXA,eAAgBC,EADL,EACKA,qBAChBxL,EAAiB+B,KAAKvC,MAAtBQ,aAIR,GAFA+B,KAAK5B,aAAayE,QAAQyG,UAAUI,OAAO,8BAEvCF,EAAJ,CAMA,OAFYnM,SAASF,EAAMG,SAAWH,EAAMI,OAAS,EAAG,KAGtD,KANiB,GAOXyC,KAAKoJ,iBAAmBpJ,KAAKwB,qBAC/BxB,KAAKX,UAAUlC,GAEjB,MACF,KAVkB,GAWZ6C,KAAKqJ,kBAAoBrJ,KAAKwB,qBAChCxB,KAAKV,WAAWnC,GAElB,MACF,KAdc,GAeRc,IAAiBwL,GACnBzJ,KAAK2J,qB,uCAQIxM,GAAQ,IACfyM,EAAoB5J,KAAK1D,MAAzBsN,gBACJA,IAAkE,IAA/CzM,EAAM0M,OAAOC,IAAIC,QAAQH,KAE9CzM,EAAM0M,OAAOC,IAAMF,K,6CAMjB5J,KAAKgK,gBACFhK,KAAKvB,0BAA4BuB,KAAKvB,yBAAyBoE,SACpE7C,KAAKgK,eAAeC,UAAUjK,KAAKvB,yBAAyBoE,W,qCAIhD,IACNnF,EAAiBsC,KAAKvC,MAAtBC,aACJsC,KAAK5B,cAAgB4B,KAAK5B,aAAayE,SACzC7C,KAAKqB,SAAS,CAAEvD,aAAckC,KAAK5B,aAAayE,QAAQqH,cAGtDlK,KAAKvB,0BAA4BuB,KAAKvB,yBAAyBoE,SACjE7C,KAAKqB,SAAS,CACZuC,0BAA2B5D,KAAKvB,yBAAyBoE,QAAQsH,eAIjEnK,KAAKzB,mBAAqByB,KAAKzB,kBAAkBsE,UAC/C7C,KAAK8C,sBACP9C,KAAKqB,SAAS,CAAErD,wBAAyBgC,KAAKzB,kBAAkBsE,QAAQsH,eAExEnK,KAAKqB,SAAS,CAAEtD,uBAAwBiC,KAAKzB,kBAAkBsE,QAAQqH,eAK3ElK,KAAK4H,oBAAoB5H,KAAK8H,mBAAmBpK,M,yCAGhC0M,GAAU,IAAD,OAC1BpK,KAAKgK,eAAiB,IAAIK,IAAeC,KAAS,SAACC,GAC5CA,GACLA,EAAQjF,SAAQ,WACd,EAAKnE,oBAEN,MACHnB,KAAKgK,eAAeQ,QAAQJ,EAAQvH,W,yCAIX7C,KAAKvC,MAAtBQ,aAEN+B,KAAK2J,iBAEL3J,KAAKyK,e,mCAKHzK,KAAKwB,oBACPxB,KAAKjE,QAELiE,KAAKlE,S,2CAKY,MAI8BkE,KAAK1D,MAA9CiG,EAJW,EAIXA,eAAgBkH,EAJL,EAIKA,qBAClBiB,EAAoBC,SAASC,mBAC9BD,SAASE,qBACTF,SAASG,sBACTH,SAASI,wBAGR9M,EAAe+B,KAAK5B,aAAayE,UAAY6H,EAC/CnI,GAAgBA,EAAetE,GAC/BwL,GAAsBzJ,KAAKqB,SAAS,CAAEpD,mB,mCAG/B8D,EAAO5E,GAAQ,IAAD,EACiB6C,KAAKvC,MAAvCC,EADiB,EACjBA,aAAckE,EADG,EACHA,gBADG,EAEuB5B,KAAK1D,MAA7CkE,EAFiB,EAEjBA,MAAOZ,EAFU,EAEVA,cAAeoL,EAFL,EAEKA,cAE9B,IAAKpJ,EAAiB,CAChBzE,GACE6C,KAAKwB,sBAEPxB,KAAKjE,OAAM,GACXiE,KAAKlE,MAAK,IAId,IAAMmP,EAAazK,EAAMI,OAAS,EAC9BsK,EAAYnJ,EACZA,EAAQ,EACVmJ,EAAYD,EACHlJ,EAAQkJ,IACjBC,EAAY,GAGVF,GAAiBE,IAAcxN,GACjCsN,EAAcE,GAGhBlL,KAAKqB,SAAS,CACZ8B,cAAezF,EACfA,aAAcwN,EACdtJ,gBAAiBsJ,IAAcxN,EAC/BG,mBAAoB,EACpBgG,WAAY,CAAE8E,WAAW,OAAD,OAAS/I,EAAT,iBACvBI,KAAKmL,c,gCAIFhO,GACU6C,KAAK1D,MAAfyH,MAEN/D,KAAKoL,UAAUjO,GAEf6C,KAAKqL,cAAclO,K,iCAIZA,GACS6C,KAAK1D,MAAfyH,MAEN/D,KAAKqL,cAAclO,GAEnB6C,KAAKoL,UAAUjO,K,oCAILA,GAAQ,IAAD,SAC2C6C,KAAKvC,MAA3DC,EADW,EACXA,aAAcG,EADH,EACGA,mBAAoB+D,EADvB,EACuBA,gBAClCpB,EAAUR,KAAK1D,MAAfkE,MACF0K,EAAYxN,EAAe,EAE7BkE,IAEiB,IAAjBpB,EAAMI,OAKRZ,KAAKqB,SAAS,CACZxD,mBAAoBA,EAAqB,KACzCgG,WAAY,CAAE8E,WAAY,UACzB,WAEDzI,OAAO4B,YAAW,kBAAM,EAAKpC,aAAawL,EAAW/N,KAAQ,OAG/D6C,KAAKN,aAAawL,EAAW/N,M,gCAIvBA,GAAQ,IAAD,SAC+C6C,KAAKvC,MAA3DC,EADO,EACPA,aAAcG,EADP,EACOA,mBAAoB+D,EAD3B,EAC2BA,gBAClCpB,EAAUR,KAAK1D,MAAfkE,MACF0K,EAAYxN,EAAe,EAE7BkE,IAEiB,IAAjBpB,EAAMI,OAERZ,KAAKqB,SAAS,CACZxD,mBAAoBA,EAAqB,KACzCgG,WAAY,CAAE8E,WAAY,UACzB,WACDzI,OAAO4B,YAAW,kBAAM,EAAKpC,aAAawL,EAAW/N,KAAQ,OAG/D6C,KAAKN,aAAawL,EAAW/N,M,+CAIRA,EAAO4E,GACG/B,KAAK1D,MAA9BsI,sBACkB5E,KAAKsL,qBAAqBnO,EAAO4E,K,2CAGxC5E,EAAO4E,GAEtB7E,EAAkBC,IAAQ6C,KAAKgC,iBAAiB7E,EAAO4E,K,uCAG5C5E,GAEXD,EAAkBC,KAEpB0H,EADoB7E,KAAK1D,MAAjBuI,SACA1H,K,4CAIW,IACbsD,EAAsBT,KAAK1D,MAA3BmE,kBACR,MAA6B,SAAtBA,GAAsD,UAAtBA,I,6CAGjB,IAAD,OACrBxD,EAAmBqI,SAAQ,SAACiG,GAC1BZ,SAASxK,iBAAiBoL,EAAW,EAAKzM,yB,gDAInB,IAAD,OACxB7B,EAAmBqI,SAAQ,SAACiG,GAC1BZ,SAASrJ,oBAAoBiK,EAAW,EAAKzM,yB,mCAInC,IACJ2K,EAAyBzJ,KAAK1D,MAA9BmN,qBACF+B,EAAUxL,KAAK5B,aAAayE,QAC9B4G,EACE+B,EAAQC,kBACVD,EAAQC,oBACCD,EAAQE,oBACjBF,EAAQE,sBACCF,EAAQG,qBACjBH,EAAQG,uBACCH,EAAQI,wBACjBJ,EAAQI,0BAGR5L,KAAK6L,oBAAmB,GAG1B7L,KAAK6L,oBAAmB,GAE1B7L,KAAKqB,SAAS,CAAEpD,cAAc,M,uCAGd,IACRA,EAAiB+B,KAAKvC,MAAtBQ,aACAwL,EAAyBzJ,KAAK1D,MAA9BmN,qBACJxL,IACEwL,EACEkB,SAASmB,eACXnB,SAASmB,iBACAnB,SAASoB,qBAClBpB,SAASoB,uBACApB,SAASqB,oBAClBrB,SAASqB,sBACArB,SAASsB,iBAClBtB,SAASsB,mBAGTjM,KAAK6L,oBAAmB,GAG1B7L,KAAK6L,oBAAmB,GAE1B7L,KAAKqB,SAAS,CAAEpD,cAAc,O,oCAInB,IACLgF,EAAajD,KAAK1D,MAAlB2G,SACAvF,EAAiBsC,KAAKvC,MAAtBC,aACHuF,GAAajD,KAAKqJ,gBAGrBrJ,KAAKN,aAAahC,EAAe,GAFjCsC,KAAKjE,U,6BAMsB,IAA1BmQ,IAAyB,2DAKxBlM,KAAK1D,MAHP6P,EAF0B,EAE1BA,OACAC,EAH0B,EAG1BA,cACAxM,EAJ0B,EAI1BA,cAEMlC,EAAiBsC,KAAKvC,MAAtBC,aACHsC,KAAKwB,sBACRxB,KAAKqB,SAAS,CAAEnD,WAAW,IAC3B8B,KAAKwB,oBAAsBtB,OAAOmM,YAChCrM,KAAKd,YACLqI,KAAK+E,IAAIF,EAAexM,IAEtBuM,GAAUD,GACZC,EAAOzO,M,8BAKoB,IAA3B6O,IAA0B,yDACtBC,EAAYxM,KAAK1D,MAAjBkQ,QACA9O,EAAiBsC,KAAKvC,MAAtBC,aACJsC,KAAKwB,sBACPtB,OAAOuB,cAAczB,KAAKwB,qBAC1BxB,KAAKwB,oBAAsB,KAC3BxB,KAAKqB,SAAS,CAAEnD,WAAW,IACvBsO,GAAWD,GACbC,EAAQ9O,M,oCAKA6H,GAMZ,QADoBvF,KAAK7B,aAAaoH,EAAKW,YAK3ClG,KAAK7B,aAAaoH,EAAKW,WAAY,GAC5B,K,wCAGS/I,EAAOoI,GAAO,IACtBkH,EAAgBzM,KAAK1D,MAArBmQ,aACYzM,KAAK7B,aAAaoH,EAAKW,WACvBuG,IAClBzM,KAAK7B,aAAaoH,EAAKW,WAAY,EAEnCuG,EAAYtP,M,iCAILoI,GAAO,IAAD,OACPtH,EAAiB+B,KAAKvC,MAAtBQ,aAEFgB,EADmBe,KAAK1D,MAAtBoQ,cACiC1M,KAAKf,iBACxC0N,EAAU1O,GAAgBsH,EAAKqH,YAA+BrH,EAAKW,SAEzE,OACE,6BAEIX,EAAKsH,SACH,6BACEC,OAAQ,SAAA3P,GAAK,OAAI,EAAK4P,kBAAkB5P,EAAOoI,IAC/CyH,QAAS/N,GAGPsG,EAAKsH,SAASI,KAAI,SAACC,EAAQnL,GAAT,OAChB,4BACE3E,IAAG,gBAAW8P,EAAOC,OAAlB,YAA4BpL,GAC/BqL,MAAOF,EAAOE,MACdD,OAAQD,EAAOC,OACftG,KAAMqG,EAAOrG,UAInB,yBACEnK,UAAU,sBACV2Q,IAAK9H,EAAK+H,YACVxD,IAAK6C,KAIT,yBACEjQ,UAAU,sBACVoN,IAAK6C,EACLU,IAAK9H,EAAK+H,YACVH,OAAQ5H,EAAK4H,OACbI,MAAOhI,EAAKgI,MACZC,MAAOjI,EAAKkI,cACZX,OAAQ,SAAA3P,GAAK,OAAI,EAAK4P,kBAAkB5P,EAAOoI,IAC/CyH,QAAS/N,IAMbsG,EAAKmI,aACH,0BAAMhR,UAAU,6BACb6I,EAAKmI,gB,uCAQDnI,GAAO,IAEhBoI,EADuB3N,KAAK1D,MAA1BsR,kBACyC5N,KAAKf,iBAEtD,OACE,yBAAKvC,UAAU,iCACb,yBACEA,UAAU,gCACVoN,IAAKvE,EAAKsI,UACVR,IAAK9H,EAAKuI,aACVN,MAAOjI,EAAKwI,eACZf,QAASW,IAGTpI,EAAKyI,gBACH,yBAAKtR,UAAU,iCACZ6I,EAAKyI,mB,+BAQR,IAAD,EAMHhO,KAAKvC,MAJPC,EAFK,EAELA,aACAO,EAHK,EAGLA,aACAuE,EAJK,EAILA,gBACAtE,EALK,EAKLA,UALK,EAyBH8B,KAAK1D,MAhBP2R,EATK,EASLA,gBACAC,EAVK,EAULA,eACAnK,EAXK,EAWLA,MACAvD,EAZK,EAYLA,MACAC,EAbK,EAaLA,kBACA0N,EAdK,EAcLA,uBACAC,EAfK,EAeLA,qBACAC,EAhBK,EAgBLA,cACAC,EAjBK,EAiBLA,eACAnJ,EAlBK,EAkBLA,YACAoJ,EAnBK,EAmBLA,qBACAC,EApBK,EAoBLA,UACA9N,EArBK,EAqBLA,eACA+N,EAtBK,EAsBLA,QACAC,EAvBK,EAuBLA,eACAC,EAxBK,EAwBLA,sBAGIC,EAAiB5O,KAAK6O,oBA3BrB,EA4BiC7O,KAAK8O,gBAArC1J,EA5BD,EA4BCA,OAAQ5G,EA5BT,EA4BSA,WAAY6G,EA5BrB,EA4BqBA,QACtB0J,EAAoBpI,YACxB,8BACAlG,EACA,CAAE,oBAAqBsD,IAGnBiL,EACJ,yBAAKC,IAAKjP,KAAKvB,yBAA0B/B,UAAWqS,GACjDX,GAAwBA,IAEvBpO,KAAKkP,WACH,kBAAC,IAAMlT,SAAP,KAEIyS,GACE,kBAAC,IAAMzS,SAAP,KACGqS,EAAcrO,KAAKX,WAAYW,KAAKoJ,gBACpCkF,EAAetO,KAAKV,YAAaU,KAAKqJ,kBAI7C,kBAAC,IAAD,CACE3M,UAAU,sBACVyS,MAAO,EACPC,UAAWpP,KAAKjB,cAChBsQ,SAAUrP,KAAKnB,gBAEf,yBAAKnC,UAAU,wBACZ0I,KAKP,yBAAK1I,UAAU,wBACZ0I,GAINsJ,GAAkBC,EAAsB3O,KAAKR,WAAYtB,GAExDiH,GACE,yBAAKzI,UAAU,yBACb,yBACEA,UAAU,kCACV8J,KAAK,aACLO,aAAW,qBAEV1B,IAKRkJ,GAAwBJ,EAAuBnO,KAAKT,iBAAkBtB,GAErEuQ,GACE,yBAAK9R,UAAU,uBACb,0BAAMA,UAAU,+BACbgB,EAAe,GAElB,0BAAMhB,UAAU,iCACbwR,GAEH,0BAAMxR,UAAU,6BACb8D,EAAMI,UAQb0O,EAAU3I,YAAK,gBAAiBsH,EAAiB,CAAE,mBAAoBzL,IACvE+M,EAAiB5I,YAAK,wBAAyBlG,EAAmB,CAAEmM,WAAY3O,IAChFuR,EAAwB7I,YAC5B,mCACAlG,EACA,CAAE,0BAA2BT,KAAK8C,uBAAyBiB,IAE7D,OACE,yBACEkL,IAAKjP,KAAK5B,aACV1B,UAAW4S,EACXG,YAAU,UAEV,yBAAK/S,UAAW6S,IACU,WAAtB9O,GAAwD,UAAtBA,IAAkCuO,EAEpEtO,GACE,yBACEhE,UAAW8S,EACXpJ,MAAOpG,KAAK0P,yBAEZ,yBACEhT,UAAU,2BACVuS,IAAKjP,KAAKzB,mBAEV,yBACE0Q,IAAKjP,KAAKxB,WACV9B,UAAU,qCACV0J,MAAOwI,EACP7H,aAAW,wBAEVvI,MAMa,QAAtBiC,GAAqD,SAAtBA,IAAiCuO,Q,GAj6ClC3Q,IAAMsR,WAA3BnS,EA0EZR,aAAe,CACpB4M,gBAAiB,GACjBqE,gBAAiB,GACjBQ,SAAS,EACTxO,UAAU,EACVH,UAAU,EACVmD,UAAU,EACVuL,WAAW,EACXrJ,aAAa,EACbzE,gBAAgB,EAChBgO,gBAAgB,EAChBH,sBAAsB,EACtB5L,wBAAwB,EACxB6G,gBAAgB,EAChBrB,cAAc,EACdrE,gBAAgB,EAChBC,OAAO,EACP0F,sBAAsB,EACtBvB,8BAA8B,EAC9BY,eAAgB,GAChBV,iBAAiB,EACjB8F,eAAgB,MAChBzN,kBAAmB,SACnB9C,WAAY,EACZiC,cAAe,IACfyI,0BAA2B,EAC3BxG,QAAS,KACTmJ,cAAe,KACfzI,eAAgB,KAChBiK,QAAS,KACTL,OAAQ,KACRtH,QAAS,KACT4H,YAAa,KACbC,aAAc,KACd5H,YAAa,KACbC,WAAY,KACZC,aAAc,KACdC,YAAa,KACbC,aAAc,KACd0I,iBAAkB,KAClB5L,iBAAkB,KAClBoM,qBAAsB,KACtBjP,iBAAkB,KAClBC,WAAY,KACZgN,cAAe,IACfxH,sBAAsB,EACtBgE,eAAgB,GAChByF,cAAe,SAACxJ,EAAS+K,GAAV,OACb,4BACE/I,KAAK,SACLnK,UAAU,4CACVkT,SAAUA,EACV/K,QAASA,EACTkC,aAAW,kBAEX,kBAAC,EAAD,CAAKtK,KAAK,OAAOD,QAAQ,gBAG7B8R,eAAgB,SAACzJ,EAAS+K,GAAV,OACd,4BACE/I,KAAK,SACLnK,UAAU,6CACVkT,SAAUA,EACV/K,QAASA,EACTkC,aAAW,cAEX,kBAAC,EAAD,CAAKtK,KAAK,QAAQD,QAAQ,gBAG9BmS,sBAAuB,SAAC9J,EAAS3G,GAAV,OACrB,4BACE2I,KAAK,SACLnK,UAAU,+CACVmI,QAASA,EACTkC,aAAW,2BAEX,kBAAC,EAAD,CAAKxK,YAAa,EAAGE,KAAMyB,EAAY,QAAU,WAGrDiQ,uBAAwB,SAACtJ,EAAS5G,GAAV,OACtB,4BACE4I,KAAK,SACLnK,UAAU,qDACVmI,QAASA,EACTkC,aAAW,mBAEX,kBAAC,EAAD,CAAKxK,YAAa,EAAGE,KAAMwB,EAAe,WAAa,gB,0BCvLhD4R,EAZA,WASX,OAFgBC,YAAS,CAAEC,QANE,CACzBC,MAAO,qBACPC,OAAQ,4CACRC,MAAO,yBCLTC,EAAS9R,IAAM+R,cAAc,CAC/BC,UAAW,IAGTC,EAAe,WAEjB,OADeC,qBAAWJ,GACZE,WAEHF,I,sKCFf,IAAMK,EAAoBC,gBAAK,SAACnU,GAC9B,IAAM0T,EAAQ5L,OAAOC,OAAO,GAAI/H,EAAMiJ,KAAKmL,UACrCC,EAAWvM,OAAOC,OAAO,CAAE,UAAa,WAAa/H,EAAMiJ,KAAKqL,KAChEC,EAAUhB,IAEhB,OAAO,6BACL,yBAAKxC,IAAK/Q,EAAMiJ,KAAKW,SAAUxJ,UAAU,sBAAsB0J,MAAOyK,EAAQb,MAAQA,EAAQW,EAAU7G,IAAKxN,EAAMiJ,KAAKW,eAEzH,kBAAM,KAGH4K,EAAS,CACb,CACE5K,SAAqB,gBACrBwK,SAAU,GACVE,IAAK,CAAE,UAAa,YACnB,CACD1K,SAAqB,gBACrBwK,SAAU,CAAE,kBAAmB,OAC/BE,IAAK,CAAE,UAAa,YACnB,CACD1K,SAAqB,iBAEpB,CACDA,SAAqB,iBACpB,CACDA,SAAqB,iBACpB,CACDA,SAAqB,gBACrBwK,SAAU,CAAE,kBAAmB,QAC9B,CACDxK,SAAqB,gBACrBwK,SAAU,CAAE,kBAAmB,SAgCpBK,MAzBf,WAEE,IAAMV,EAAYC,IACZO,EAAShB,IACTmB,EAAc9Q,OAAO+Q,YAAYZ,EACjCa,EAAUC,YAAH,IAEFH,GAGLI,EAAU,CACdnO,UAAU,EACVvC,gBAAgB,EAChByE,aAAa,EACblF,UAAU,EACVoI,0BAA2B,IAC3B+D,cAAe,IACfxM,cAAeiR,EAAQb,MAAM,IAAI,KAEnC,OAAQ,yBAAK5J,MAAO,CAAEiL,gBAAiB,UACrC,kBAACH,EAAD,MACA,kBAAC,EAAD,iBAAkBE,EAAlB,CAA2B7C,sBAAsB,EAAOzO,UAAU,EAAOU,MAAOsQ,EAAQ1R,WAAY,SAACmG,GAAD,OAAU,kBAACiL,EAAD,CAAmBjL,KAAMA,U,oGChErI+L,G,MAAYC,sBAAW,SAACjV,EAAO2S,GAEjC,IAAMuC,EAAaC,mBACbC,EAASpV,EAAMqV,SAAS1E,KAAI,SAAAhR,GAAC,OAAI,EAAIA,EAAE4K,MAAM5K,EAAEK,UAC/CsV,EAAUH,mBAYhB,OAVAI,8BAAoB5C,GAAK,WACvB,MAAO,CACL,WAAe,kBAAM2C,EAAQ/O,aAIjCiP,qBAAU,WACRF,EAAQ/O,QAAU,IAAIkP,IAAQP,EAAW3O,WACxC,IAEK,yBAAKoM,IAAKuC,EAAYpL,MAAO,CAAC4L,SAAS,YAAatV,UAAU,cACpE,yBAAKA,UAAU,qBACZgV,EAAOzE,KAAI,SAAAhR,GAAC,OAAIA,EAAEgW,UAChBC,SAAQ,SAACjW,EAAGkW,GAAJ,MAAS,CAAClW,EAAI,yBAAKmB,IAAK,oBAAoB+U,EAAGzV,UAAU,aACjE0V,MAAM,EAAmB,EAAhBV,EAAO9Q,OAAa,IAElC,yBAAKlE,UAAU,sBACZJ,EAAMqV,SAAS1E,KAAI,SAAAhR,GAAC,OAAI,EAAIA,EAAE4K,MAAM5K,EAAEK,OAAO+V,iBAMpD,SAASC,EAAWhW,GAElB,OAAQ,yBAAKI,UAAU,OAAO6V,cAAa,IAAMjW,EAAMkW,MACrD,4BAAQ3L,KAAK,SAASnK,UAAU,gBAC9B,0BAAMA,UAAU,qBACXJ,EAAMmW,KAAK,GAEhB,0BAAM/V,UAAU,oBAAoBJ,EAAM2V,UAKhD,SAASS,EAAYpW,GAEnB,OAAQ,wBAASA,EACf,yBAAKI,UAAW,WAAaJ,EAAMkW,MAChClW,EAAMqV,WAQb,SAASgB,GAAKrW,GACZ,IAAMkW,EAAOlW,EAAMkW,KACbH,EAAU,kBAACK,EAAD,CAAatM,MAAO9J,EAAM8J,MAAOoM,KAAMA,GAAOlW,EAAMqV,UAEpE,MAAO,CAAEM,OADM,kBAACK,EAAehW,GACN+V,QAASA,G,wBC5ChCO,GAAQrB,sBAAW,SAACjV,EAAO2S,GAAS,IAC9B4D,EAAWC,cAAXD,OACR,OAAQ,6BACJ,kBAACE,EAAA,EAAKC,MAAN,CAAYC,GAAIC,KACZ,kBAACH,EAAA,EAAKI,MAAN,KAAa7W,EAAMkR,MAAM,kBAAC,GAAD,CAAU4F,MAAOP,EAAOvW,EAAMkW,SACtDlW,EAAM+W,OAAOpG,KAAI,SAAChR,EAAG8F,GAClB,OAAO,6BACH,kBAACgR,EAAA,EAAKO,MAAN,CACIrE,IAAKA,EACLuD,KAAMlW,EAAMkW,KACZ3L,KAAK,QACL0M,GAAE,UAAKjX,EAAMkW,MAAX,OAAkBzQ,GACpByR,MAAOvX,EACPwX,MAAOxX,aAsB/B,IAAMyX,GAAanC,sBAAW,SAACjV,EAAO2S,GAAS,IAAD,EAEhB0E,mBAAS,GAFO,mBAEnCF,EAFmC,KAE5BG,EAF4B,KAG1C,SAASrK,EAAIsK,GACTD,EAASH,EAAQI,EAAM,EAAI,EAAIJ,EAAQI,GAG3C,OAAQ,yBAAKnX,UAAU,oBACnB,yBAAKA,UAAU,uBACX,4BAAQA,UAAU,aAAa0J,MAAO,CAAEiL,gBAAiB,WAAaxM,QAAS,SAACiP,GAAqC,OAA7BA,EAAEtL,iBAAkBe,GAAK,IAAW,IAAS,uBAAGnD,MAAO,CAAE2N,MAAO,SAAWrX,UAAU,kBAEjL,2BAAOuS,IAAKA,EAAKpI,KAAK,SAAS2L,KAAMlW,EAAMkW,KAAM9V,UAAU,+BAA+B+W,MAAOA,EAAOO,IAAI,IAAIC,UAAQ,IACxH,yBAAKvX,UAAU,uBACX,4BAAQA,UAAU,aAAa0J,MAAO,CAAEiL,gBAAiB,WAAaxM,QAAS,SAACiP,GAAoC,OAA5BA,EAAEtL,iBAAkBe,EAAI,IAAW,IAAS,uBAAGnD,MAAO,CAAE2N,MAAO,SAAWrX,UAAU,qBAMlLwX,GAAc3C,sBAAW,SAACjV,EAAO2S,GACnC,IAAMkF,EAAU9V,IAAMkS,WAAW6D,KACjC,OAAQ,kBAAC,WAAD,KACJ,kBAACrB,EAAA,EAAKsB,QAAN,eAAc7B,KAAM2B,EAAQG,UAAWrF,IAAKA,GAAS3S,QAK7D8H,OAAOmQ,SAAW,SAAUC,EAAGC,GAI3B,IADA,IAAIC,GADJD,GADAA,EAAIA,EAAEE,QAAQ,aAAc,QACtBA,QAAQ,MAAO,KACXC,MAAM,KACPzC,EAAI,EAAG0C,EAAIH,EAAE9T,OAAQuR,EAAI0C,IAAK1C,EAAG,CACtC,IAAI2C,EAAIJ,EAAEvC,GACV,KAAI2C,KAAKN,GAGL,OAFAA,EAAIA,EAAEM,GAKd,OAAON,GAGX,IAAMO,GAAW,SAACzY,GAAY,OAAO,kBAAC,WAAD,KAAWA,EAAM8W,OAAS,uBAAGhN,MAAO,CAAE2N,MAAO,UAAWiB,QAAS,WAAvC,IAAqD1Y,EAAM8W,MAAM6B,SAAW,WAA5E,OAEzDC,GAAU,SAAC5Y,GAEb,IAAMH,EAAQG,EAAMH,OAAS,GACvBC,EAASE,EAAMF,QAAU,GAE/B,OACI,yBAAKgK,MAAO,CACR4L,SAAU,WACVmD,IAAK,EACLhZ,MAAO,OACPC,OAAQ,OACR,cAAe,SACf,kBAAmB,SACnB,QAAWE,EAAM8Y,KAAO,OAAS,SAEjC,yBAAKjZ,MAAOA,EAAOC,OAAQA,EAAQI,QAAQ,YAAYG,MAAM,6BAA6BE,OAAO,WAC7F,uBAAGD,KAAK,OAAOyY,YAAU,WACrB,uBAAG3Q,UAAU,iBAAiB4Q,eAAa,KACvC,4BAAQC,iBAAe,KAAKC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAC9C,0BAAM9Z,EAAE,+BACJ,sCACI+Z,cAAc,YACd9O,KAAK,SACL+O,KAAK,UACLC,GAAG,YACHC,IAAI,KACJC,YAAY,qBA+N7BC,OAtNf,WAA6B,IAAD,EACMrC,oBAAS,GADf,mBACjBsC,EADiB,KACRC,EADQ,KAElBC,EAAUC,YAAQ,CAAEC,KAAM,WACxBC,EAA2DH,EAA3DG,SAAUC,EAAiDJ,EAAjDI,QAASC,EAAwCL,EAAxCK,MAAOC,EAAiCN,EAAjCM,UAAW5D,EAAsBsD,EAAtBtD,OAAQ6D,EAAcP,EAAdO,UAC/CrG,EAAYC,IAJM,EAzHV,WACd,IAAMqG,EAAYlF,iBAAO,MAEzB,MAAO,CADe,eAACmF,EAAD,uDAAe,EAAf,OAAqB1W,OAAO2W,SAAS,EAAGF,EAAU9T,QAAQiU,UAAYF,IACrED,GA4HqBI,GANpB,mBAMjBC,EANiB,KAMFC,EANE,KAQlBC,EAAW,8GAkBXC,EAAS,SAAAC,GACXlB,GAAW,GACX,IAjHYmB,EAiHNC,EAAUlT,OAAOC,OAAO,GAAI,CAAE,YAAe,CAAC,EAAG,EAAG,IAxHlE,SAAmBgT,GACf,IAAME,EAAS,GAEf,OADAnT,OAAOmG,QAAQ8M,GAAKpK,KAAI,SAAChR,GAAD,OAAOsb,EAAO,SAAWtb,EAAE,IAAMA,EAAE,MACpDsb,EAqH6DC,CAAUJ,IACpEK,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BC,MArHQP,EAqHSC,EAnHlB,IAAIO,gBAAgBR,GAAKS,aAwH5BC,MAAM,uCAAyCb,EAAUO,GACpDO,MAAK,SAAAC,GACF,GAAIA,EAASC,GAQT,OAPAC,KAAKC,KACD,0CACA,qGACA,WAEJnJ,EAAIpM,QAAQwV,aAAaxC,GAAG,QAC5BW,EAAM,IAGV,MAAMyB,KAGTK,OAAM,SAACC,GACJJ,KAAKC,KAAK,CACN3b,KAAM,QACN+Q,MAAO,UACPgL,KAAM,sHAEXC,SACC,WAAQvC,GAAW,OAIzBjH,EAAMwC,mBAEZvR,OAAOwW,UAAYA,EAEnB,IAAMgC,EAAW,SAACC,EAAOC,GACrB,6BAAO,sBAAAlE,EAAA,sEAAkB6B,EAAQoC,GAA1B,uCAAmCC,IAAnC,2BAAgD,KAAhD,kFAKLC,EAAsC,GAArB3Y,OAAO+Q,YAAmB,IAAMZ,EAIvD,OAAQ,yBAAKpB,IAAKgI,GAEd,kBAAC,IAAiBd,EACd,kBAACpD,EAAA,EAAD,CAAM+F,IAAK5B,EAAU6B,SAAU,SAACjF,GAAQA,EAAEtL,iBAAkB2O,EAAOV,KAAcO,EAAc3G,KAC3F,yBAAKjK,MAAO,CAAE4S,OAAQ,OAAQC,UAAW,SAErC,kBAAC3H,EAAD,CAAWrC,IAAKA,GACZ,kBAAC0D,GAAD,CAAMvV,IAAI,QAAQoV,KAAK,cAAcP,OAAO,eAAKQ,IAAK,yBAAKpF,IAAI,QAAQjH,MAAO,CAAEjK,MAAO,QAAU2N,IAAK,sBAElG,kBAACiJ,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKoB,UAAU,cAC3B,kBAACvB,EAAA,EAAKI,MAAN,qBAAe,kBAAC,GAAD,CAAUC,MAAOP,EAAO,eACvC,kBAACqB,GAAD,CAAajF,IAAKqH,EAAS,CAAE4C,UAAU,IAASC,KAAK,IAAIC,SAAU,SAACnd,KAAWod,YAAY,UAC3F,2BAAO3c,UAAU,wBAAjB,uEAGJ,kBAACkW,GAAD,CAAO3D,IAAKqH,EAAS,CAAE4C,UAAU,IAAS1G,KAAK,aAAahF,MAAM,2EAC9D6F,OAAQ,CAAC,iFAAiB,mGAAoB,4GAClD,kBAACT,GAAD,CAAO3D,IAAKqH,EAAS,CAAE4C,UAAU,IAAS1G,KAAK,aAAahF,MAAM,0IAC9D6F,OAAQ,CAAC,uFAAkB,0FAE/B,kBAACN,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKoB,UAAU,aAC3B,kBAACvB,EAAA,EAAKI,MAAN,oBAAc,kBAAC,GAAD,CAAUC,MAAOP,EAAO,cACtC,kBAACqB,GAAD,CAAajF,IAAKqH,EAAS,CACvB4C,UAAU,EACVI,QAAS,CACL7F,MAAO,cACPwB,QAAS,gDAEboE,YAAY,kBAIpB,kBAACzG,GAAD,CAAO3D,IAAKqH,EAAS,CAAE4C,UAAU,IAAS1G,KAAK,YAAYhF,MAAM,yDAAY6F,OAAQ,CAAC,iFAAiB,0IAEvG,kBAACN,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKoB,UAAU,aAC3B,kBAACvB,EAAA,EAAKI,MAAN,iFACA,2BAAOzW,UAAU,wBAAjB,wLACA,kBAACwX,GAAD,CAAa1B,KAAK,YAAYvD,IAAKqH,EAAU+C,YAAY,aAG7D,yBAAKjT,MAAO,CAAE6S,UAAW,WACrB,kBAACM,EAAA,EAAD,CAAQ1U,QAAS6T,EAhDzB,CAAC,aAAc,aAAc,aAAc,YAAa,cAgDT,WACH,mFAA5BjC,EAAU,eACVxH,EAAIpM,QAAQwV,aAAamB,OACzBxC,EAAc3G,KAGdpB,EAAIpM,QAAQwV,aAAaxC,GAAG,GAC5BmB,EAAc6B,QAPtB,wBAiBR,kBAAClG,GAAD,CAAMvV,IAAI,QAAQoV,KAAK,mBAAmBP,OAAO,eAAKQ,IAAK,yBAAKpF,IAAI,OAAOjH,MAAO,CAAEjK,MAAO,QAAU2N,IAAK,qBAEtG,kBAAC8I,GAAD,CAAO3D,IAAKqH,EAAS,CAAE4C,UAAU,IAAS1G,KAAK,YAAYhF,MAAM,uEAAgB6F,OAAQ,CAAC,eAAM,kBAEhG,kBAACN,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKoB,UAAU,cAC3B,kBAACvB,EAAA,EAAKI,MAAN,gFAAwB,kBAAC,GAAD,CAAUC,MAAOP,EAAO,eAChD,kBAACqB,GAAD,CAAa9N,MAAO,CAAE2N,MAAO,WAAa9E,IAAKqH,EAAS,CAAE4C,UAAU,IAASjG,GAAG,SAASwG,QAAM,GAC3F,iCACA,4DACA,4DACA,4DACA,gDACA,gDACA,8DAIR,kBAAC1G,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKoB,UAAU,cAC3B,kBAACvB,EAAA,EAAKI,MAAN,6CACA,2BAAOzW,UAAU,wBAAjB,+MACA,kBAACgX,GAAD,CAAYzE,IAAKqH,EAAU9D,KAAK,gBAIpC,kBAACO,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKoB,UAAU,cAC3B,kBAACvB,EAAA,EAAKI,MAAN,2EACA,2BAAOzW,UAAU,wBAAjB,0GACA,kBAACgX,GAAD,CAAYzE,IAAKqH,EAAU9D,KAAK,gBAGpC,kBAACO,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKoB,UAAU,aAC3B,kBAACvB,EAAA,EAAKI,MAAN,yDAEA,2BAAOzW,UAAU,wBAAjB,8IACA,kBAACgX,GAAD,CAAYzE,IAAKqH,EAAU9D,KAAK,eAGpC,yBAAKpM,MAAO,CAAE6S,UAAW,WACrB,kBAACM,EAAA,EAAD,CAAQ1U,QAAS6T,EAtGzB,CAAC,YAAa,eAsGiC,WAAQzJ,EAAIpM,QAAQwV,aAAamB,OAAQxC,EAAc6B,OAA9F,wBAQR,kBAAClG,GAAD,CAAMvV,IAAI,QAAQgJ,MAAO,CAAE4L,SAAU,YAAcQ,KAAK,oBAAoBP,OAAO,eAAKQ,IAAK,yBAAKpF,IAAI,QAAQjH,MAAO,CAAEjK,MAAO,QAAU2N,IAAK,sBACzI,6BACI,uBAAG1D,MAAO,CAAE6S,UAAW,SAAUlF,MAAO,YAAxC,+KAGA,kBAAChB,EAAA,EAAKC,MAAN,CAAYC,GAAIC,IAAKoB,UAAU,cAC3B,kBAACvB,EAAA,EAAKI,MAAN,iCACA,kBAACe,GAAD,CAAajF,IAAKqH,EAAU+C,YAAY,oBAKhD,yBAAKjT,MAAO,CAAE6S,UAAW,WACrB,kBAACM,EAAA,EAAD,CAAQG,QAAQ,UAAU7S,KAAK,SAAS+I,SAAUqG,GAAlD,kBAEJ,kBAAC,GAAD,CAASb,MAAOa,W,kDCnUtCf,GAAU,SAAC5Y,GAECA,EAAMH,MACLG,EAAMF,OAErB,OAAQ,yBAAKgK,MAAO,CAChB4L,SAAU,WACVmD,IAAK,EACLhZ,MAAO,OACPC,OAAQ,OACR,cAAe,SACf,kBAAmB,SACnB,QAAWE,EAAM8Y,KAAO,OAAS,SAEjC,yBAAKtL,IAAI,yBCgDA6P,OA5DjB,WAEI,IAAMb,EAAM,mGAFC,EASWnF,mBAAS,IATpB,mBASNyD,EATM,KASAwC,EATA,OAUWjG,oBAAS,GAVpB,mBAUNkG,EAVM,KAUAC,EAVA,iDAYb,4BAAApF,EAAA,sEAKuBqF,KAAMC,IAAIlB,GALjC,OAKQmB,EALR,OAMEL,EAAQK,EAAO7C,MACf0C,GAAQ,GAPV,4CAZa,sBAkCb,OAZAhI,qBAAU,YAtBG,mCAuBXoI,KACC,IAUK,yBAAK9T,MAAO,CAAC4L,SAAS,aAC5B,yBAAK5L,MAAO,CAAC+T,SAAS,WAAWhe,MAAM,OAAQC,OAAO,OAAO4Y,QAAQ6E,EAAK,QAAQ,SAChF,kBAAC,GAAD,CAASzE,MAAOyE,KAGlB,kBAAC,KAAD,CACEO,eAbyB,CAC3BC,QAAS,EACTC,KAAM,EACNC,IAAK,EACLC,IAAK,GAUH9d,UAAU,kBACV+d,gBAAgB,0BAEfrD,EAAKnK,KAAI,SAAChR,EAAG8F,GACZ,OAAO,kBAAC2Y,GAAA,EAAD,CAAMtd,IAAK,OAAO2E,EAAOqE,MAAO,CAAEiL,gBAAiB,UAAWsJ,aAAc,OAAQ5G,MAAO,SAAWrX,UAAU,eACrH,kBAACge,GAAA,EAAKE,KAAN,KACE,kBAACF,GAAA,EAAKG,MAAN,KAAa5e,EAAEuW,MACf,kBAACkI,GAAA,EAAKI,KAAN,KACG7e,EAAE8e,a,oBCpDfC,GAAM,mBAAmB7B,KAAK8B,UAAUC,UAAY,IAexD,SAASC,KACL,OACI,yBAAKze,UAAU,2CACX,4BAAQ8Q,MAAM,cAAc9Q,UAAU,wBAAwBoN,IAAI,uTAAuTsR,YAAY,IAAIC,gBAAgB,GAAGC,cAAY,QAAQnV,SAAS,OAiGtboV,OA5Ff,WACI,IACMtM,EAAMwC,iBAAO,MAFP,EArBhB,WAA0B,IAAD,EACGkC,mBAAS,CAAC,EAAG,IADhB,mBACd6H,EADc,KACRC,EADQ,KAUrB,OARAC,2BAAgB,WACZ,SAASC,IACLF,EAAQ,CAACvb,OAAO0b,WAAY1b,OAAO+Q,cAIvC,OAFA/Q,OAAOC,iBAAiB,SAAUwb,GAClCA,IACO,kBAAMzb,OAAOoB,oBAAoB,SAAUqa,MACnD,IACIH,EAcSK,GAAT1f,EAHK,sBAIYwX,mBAAS,GAJrB,mBAILmI,EAJK,KAICC,EAJD,KAMZjK,qBAAU,WACN,IAAMgK,EAAgC,GAA1B7M,EAAIpM,QAAQqH,YAAmB,IAN9B,IAQb6R,EAAQD,EAAK,GAAI,GAAIA,KAEtB,CAAC3f,IAEJ,IAAM6f,EAAI,SAAC7J,GACP,OAAQ6I,GAAQ,EAAF7I,EAAI,EAAIA,GAAG,MAE7B,OACI,yBAAK/L,MAAO,CAAEjK,MAAO,MAAO,OAAU,cAClC,kBAAC8f,GAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZ,kBAACjJ,EAAA,EAAD,CAAKiJ,GAAI,EAAGlN,IAAKA,GACb,yBAAK7I,MAAO,CACRgW,gBAAiB,wBACjBjgB,MAAO,QACPC,OAAQ,QACR4c,OAAQ,SACRqD,OAAQ,QACRC,YAAa,MACbC,YAAa,UACb5B,aAAc,OACd5G,MAAO,UACPyI,WAAY,WACZhhB,KAAM,EACNE,MAAO,EACP+gB,SAAS,OACTX,KAAMA,IAEN,6BACA,6BACA,kBAACY,GAAA,EAAD,KACI,kBAACT,GAAA,EAAD,CAAK7V,MAAO,CAAEqW,SAAUT,EAAI,IAAKQ,WAAY,cAAe,kBAACtJ,EAAA,EAAD,kDAC5D,6BACA,kBAAC+I,GAAA,EAAD,KAAK,kBAAC/I,EAAA,EAAD,CAAK9M,MAAO,CAAEqW,SAAUT,EAAI,IAAKjI,MAAO,MAAOyI,WAAY,cAA3D,4CACL,6BACA,kBAACP,GAAA,EAAD,KACI,kBAAC/I,EAAA,EAAD,kCAEJ,kBAAC+I,GAAA,EAAD,KACI,kBAAC/I,EAAA,EAAD,0DAEJ,kBAAC+I,GAAA,EAAD,KACI,kBAAC/I,EAAA,EAAD,kCAEJ,kBAAC+I,GAAA,EAAD,KACI,kBAAC/I,EAAA,EAAD,0DAEJ,6BAEA,yBAAKxW,UAAU,8BACX,yBAAKA,UAAU,SAAf,2BAA2B,6BAA3B,qBAAoC,6BAApC,sBACA,yBAAKA,UAAU,SAAf,2BAA2B,6BAA3B,wBAGR,6BACA,6CACA,gHAEJ,8BAIJ,kBAACwW,EAAA,EAAD,CAAKiJ,GAAG,KACJ,kBAACO,GAAA,EAAD,KACI,kBAACT,GAAA,EAAD,KACI,kBAAC/I,EAAA,EAAD,sGACI,yBAAKxW,UAAU,yBAAyB0J,MAAO,CAAE,SAAY,QAAS4S,OAAO,WAA7E,KAA0F,kBAACmC,GAAD,SAGlG,kBAACc,GAAA,EAAD,KACI,kBAAC/I,EAAA,EAAD,CAAK9M,MAAO,CAACuW,UAAU,SACnB,sEACA,yBAAKtP,IAAI,SAASjH,MAAO,CAAE,MAAS,MAAO,SAAY,SAAW0D,IAA8B,6B,wMCzFhI,IAAMoH,GAAUC,YAAH,MAMb,SAASyL,KACP,OACE,yBAAKlgB,UAAU,2CACb,4BAAQN,OAAO,OAAOD,MAAM,OAAOqR,MAAM,gBAAgBpH,MAAO,CAAE,aAAgB,QAAU1J,UAAU,wBAAwBoN,IAAI,uGAAuGsR,YAAY,IAAIyB,MAAM,0EAA0ExB,iBAAiB,KAMhW,SAASyB,GAAOxgB,GAEd,IACM2S,EAAMwC,iBAAO,MAHE,EA8CvB,SAAoBxC,GAAM,IAAD,EACC0E,mBAAS,CAAC,EAAG,IADd,mBAChB6H,EADgB,KACVC,EADU,KAWvB,OATAC,2BAAgB,WACd,IAAMqB,EAAO9N,EAAIpM,QACjB,SAAS8Y,IACPF,EAAQ,CAACsB,EAAK7S,YAAa6S,EAAK5S,eAIlC,OAFAjK,OAAOC,iBAAiB,SAAUwb,GAClCA,IACO,kBAAMzb,OAAOoB,oBAAoB,SAAUqa,MACjD,CAAC1M,IACGuM,EApDgBwB,CAAW/N,GALb,mBAKR7S,GALQ,WAMf6gB,EAAe3gB,EAAM2gB,eAK3B,OAJAnL,qBAAU,WACRmL,EAAe7gB,KACf,CAAC6gB,EAAe7gB,IAGhB,kBAAC8gB,EAAA,EAAD,CAAQjO,IAAKA,EAAK7I,MAAO,CAAEiL,gBAAiB,WAAa8L,OAAQ,MAAOC,kBAAgB,EAACC,GAAG,QAAQC,MAAM,OACxG,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,YACjB,yBAAK9gB,UAAW,oBAAqB0J,MAAO,CAAEjK,MAAO,SACnD,uBAAGA,MAAM,IAAT,WAAoB,0BAAMiK,MAAO,CAAE4L,SAAU,WAAYmD,IAAK,MAAO3Z,KAAM,QAASiiB,QAAS,KAAzE,YAGtB,0BAAM/gB,UAAU,qBAAhB,qBAGF,kBAACghB,EAAA,EAAD,CAAKhhB,UAAU,WACb,kBAACghB,EAAA,EAAIC,KAAL,CAAUH,KAAK,SACb,yBAAK7gB,MAAM,6BAA6BC,KAAK,eAAeR,OArBrD,GAqBqEI,QAAQ,YAAYL,MArBzF,IAqBwG,0BAAMP,EAAE,gBAAgBgB,KAAK,SAAc,0BAAMhB,EAAE,yIAClK,yBAAKc,UAAU,4BAA2B,0BAAMA,UAAU,sBAAhB,gBAA1C,iBAEF,kBAACghB,EAAA,EAAIC,KAAL,CAAUH,KAAK,SACb,yBAAK7gB,MAAM,6BAA6BC,KAAK,eAAeghB,iBAAiB,gBAAgBxhB,OAzBtF,GAyBsGI,QAAQ,YAAYL,MAzB1H,IAyByI,2BAAG,0BAAMS,KAAK,OAAOR,OAAO,KAAKD,MAAM,QAAgB,2BAAG,2BAAG,0BAAMP,EAAE,8MAA8MiiB,SAAS,eAC5a,yBAAKnhB,UAAU,4BAA2B,0BAAMA,UAAU,sBAAhB,gBAA1C,iBAEF,kBAACghB,EAAA,EAAIC,KAAL,CAAUH,KAAK,UACb,yBAAKphB,OAAQ0hB,GAAY3hB,MAAO2hB,GAAYthB,QAAQ,YAAYE,UAAU,8BAA8BE,KAAK,eAAeD,MAAM,8BAChI,0BAAMkhB,SAAS,UAAUjiB,EAAE,kRAE7B,yBAAKc,UAAU,2BAA0B,0BAAMA,UAAU,sBAAhB,sBAAzC,iBAEF,kBAACghB,EAAA,EAAIC,KAAL,CAAUH,KAAK,YACb,yBAAK7gB,MAAM,6BAA6BC,KAAK,eAAeR,OAnCrD,GAmCqEI,QAAQ,YAAYL,MAnCzF,IAmCwG,0BAAMP,EAAE,gBAAgBgB,KAAK,SAAc,0BAAMhB,EAAE,oHAClK,yBAAKc,UAAU,4BAAf,+BAsBV,IAAMihB,GAAO,SAACrhB,GACZ,IAAM+T,EAAWC,IAEXyN,GADQzhB,EAAM0hB,OAAO,GACN3N,EAErB,OAAQ,uBAAGkD,GAAIjX,EAAMiX,GAAInN,MAAO,CAAC+O,IAAI,IAAD,OAAK4I,EAAL,MAAiB,WAAa,WAAYrhB,UAAU,UAGpFuhB,GAAa,SAAC3hB,GAClB,IAAMuU,EAAUhB,IAChB,OAAO,kBAAC,WAAD,KACEgB,EAAQb,MAAM,yBAAKkO,MAAM,WAAW9X,MAAO,CAAC4L,SAAS,WAAW5V,OAAO,OAAQggB,gBAAgB,OAAD,OAAS9f,EAAMwN,IAAf,OAC7F,yBAAKuD,IAAK/Q,EAAMwN,IAAKA,IAAKxN,EAAMwN,IAAK1D,MAAO,CAAC,MAAQ,UACpD9J,EAAMqV,UAEX,yBAAKjV,UAAU,WAAW0J,MAAO,CAAE4L,SAAS,WAAWoK,gBAAgB,OAAD,OAAS9f,EAAMwN,IAAf,OAAyBxN,EAAMqV,YA2D7G,SAASwM,KACP,IAAMtN,EAAShB,IACf,OAAQ,6BACN,kBAAC,GAAD,CAAM0D,GAAG,SACT,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAazJ,IAAI,mDAGjB,kBAAC,GAAD,CAAMyJ,GAAG,SACT,yBAAKnN,MAAO,CAAE6S,UAAW,SAAU,OAAU,SAAUmF,SAAU,UAC/D,kBAAC,GAAD,OAGF,kBAAC,GAAD,CAAatU,IAAI,qCAGf,yBAAK1D,MAAO,CAAC4L,SAAS,WAAWxW,KAAK,EAAG2Z,IAAI,MAAMhZ,MAAM,OAAQ8c,UAAU,WACvE,0BAAM7S,MAAO,CAACiL,gBAAgB,UAAW0C,MAAM,QAAQ,cAAgB,MAAM0I,SAAS,OAAO4B,QAAQ,OAAOZ,QAAQ,QAApH,kCAON,kBAAC,GAAD,CAAMlK,GAAG,UACT,yBAAKnN,MAAO,CAAE,WAAc,WAAY6S,UAAW,WAEjD,yBAAK7S,MAAO,CAAE4S,OAAQ,cACpB,yBAAK5S,MAAO,CAAEqW,SAAU,OAAQ1I,MAAO,YAAvC,8CAGA,kBAAC,GAAD,QAGJ,kBAAC,GAAD,CAAajK,IAAI,mDAEhB+G,EAAQb,MACR,kBAAC,GAAD,CAAMuD,GAAG,UAAUyK,MAA0B,GAAnB9d,OAAO+Q,YAAe,MAChD,kBAAC,GAAD,CAAMsC,GAAG,YAET,6BACC,yBAAKnN,MAAO,CAAE6S,UAAW,SAAUoF,QAAS,SAAUhN,gBAAiB,UAAW,kBAACuL,GAAD,MAAlF,MAEF,kBAAC,GAAD,CAAa9S,IAAI,oDAqCNwU,OAhCf,WACI,IAAMzN,EAAShB,IADJ,EAEuB8D,mBAAS,GAFhC,mBAEJtD,EAFI,KAEOkO,EAFP,KAGb,OACE,yBAAK7hB,UAAU,OACb,kBAAC,GAAD,MACA,yBAAK0J,MAAO,CAAE,MAAS,SACrB,kBAAC0W,GAAD,CAAQG,eAAgB,SAAC7gB,GAAUmiB,EAAaniB,MAEhD,kBAAC,EAAOoiB,SAAR,CAAiB/K,MAAO,CAACpD,UAAWA,IAChC,kBAAC,GAAD,CAAMkD,GAAG,YACT,kBAAC,EAAD,MACA,kBAAC4K,GAAD,OAGJ,4BAAQ/X,MAAO,CAAC,gBAAkB,QAAS4L,SAAS,aAClD,yBAAK5L,MAAO,CAACiY,QAAQ,MAAOtK,MAAM,UAE7BlD,EAAQb,MAAM,kBAAC,WAAD,MAAa,kBAAC,WAAD,KAAU,qDAAgC,uBAAGwN,KAAK,gCAAR,aAErE3M,EAAQb,MAAO,8CAAoB,uBAAGwN,KAAK,2CAA2ChQ,MAAM,WAAzD,WAApB,SAAwG,uBAAGgQ,KAAK,4BAA4BhQ,MAAM,YAA1C,qBACpI,yBAAKpH,MAAO,CAAC4O,QAAQ,SAAShD,SAAS,WAAWtW,MAAM,SAAxD,iBAA+E,uBAAG8hB,KAAK,2CAA2ChQ,MAAM,WAAzD,WAA/E,SAAmK,uBAAGgQ,KAAK,4BAA4BhQ,MAAM,YAA1C,0BChOjJiR,QACW,cAA7Bve,OAAOwe,SAASC,UAEe,UAA7Bze,OAAOwe,SAASC,UAEhBze,OAAOwe,SAASC,SAASC,MACvB,2DCZNC,QAAQC,IAAI,yCAAW,4BAEvBC,IAASrN,OACP,kBAAC,IAAMsN,WAAP,KACE,kBAAC,GAAD,OAEFrU,SAASsU,eAAe,SDuHpB,kBAAmBhE,WACrBA,UAAUiE,cAAcC,MACrBnH,MAAK,SAAAoH,GACJA,EAAaC,gBAEd/G,OAAM,SAAAlF,GACLyL,QAAQzL,MAAMA,EAAM6B,a","file":"static/js/main.33344903.chunk.js","sourcesContent":["import React from 'react';\r\nimport { number, oneOf, string } from 'prop-types';\r\n\r\nconst left = <polyline points=\"15 18 9 12 15 6\" />;\r\nconst right = <polyline points=\"9 18 15 12 9 6\" />;\r\nconst maximize = <path d=\"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\" />;\r\nconst minimize = <path d=\"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\" />;\r\nconst play = <polygon points=\"5 3 19 12 5 21 5 3\" />;\r\nconst pause = (\r\n  <React.Fragment>\r\n    <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\" />\r\n    <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\" />\r\n  </React.Fragment>\r\n);\r\n\r\nconst iconMapper = {\r\n  left,\r\n  right,\r\n  maximize,\r\n  minimize,\r\n  play,\r\n  pause,\r\n};\r\n\r\nconst SVG = (props) => {\r\n  const {\r\n    strokeWidth,\r\n    viewBox,\r\n    icon,\r\n  } = props;\r\n  return (\r\n    <svg\r\n      className=\"image-gallery-svg\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox={viewBox}\r\n      fill=\"none\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth={strokeWidth}\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    >\r\n      {iconMapper[icon]}\r\n    </svg>\r\n  );\r\n};\r\n\r\nSVG.propTypes = {\r\n  strokeWidth: number,\r\n  viewBox: string,\r\n  icon: oneOf([\r\n    'left',\r\n    'right',\r\n    'maximize',\r\n    'minimize',\r\n    'play',\r\n    'pause',\r\n  ]).isRequired,\r\n};\r\n\r\nSVG.defaultProps = {\r\n  strokeWidth: 1,\r\n  viewBox: '0 0 24 24',\r\n};\r\n\r\nexport default SVG;","import clsx from 'clsx';\r\nimport React from 'react';\r\nimport { Swipeable, LEFT, RIGHT } from 'react-swipeable';\r\nimport throttle from 'lodash.throttle';\r\nimport debounce from 'lodash.debounce';\r\nimport isEqual from 'lodash.isequal';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport {\r\n  arrayOf,\r\n  bool,\r\n  func,\r\n  node,\r\n  number,\r\n  oneOf,\r\n  shape,\r\n  string,\r\n} from 'prop-types';\r\nimport SVG from './SVG';\r\n\r\nconst screenChangeEvents = [\r\n  'fullscreenchange',\r\n  'MSFullscreenChange',\r\n  'mozfullscreenchange',\r\n  'webkitfullscreenchange',\r\n];\r\n\r\nconst imageSetType = arrayOf(shape({\r\n  srcSet: string,\r\n  media: string,\r\n}));\r\n\r\nfunction isEnterOrSpaceKey(event) {\r\n  const key = parseInt(event.keyCode || event.which || 0, 10);\r\n  const ENTER_KEY_CODE = 66;\r\n  const SPACEBAR_KEY_CODE = 62;\r\n  return key === ENTER_KEY_CODE || key === SPACEBAR_KEY_CODE;\r\n}\r\n\r\nexport default class ImageGallery extends React.Component {\r\n  static propTypes = {\r\n    flickThreshold: number,\r\n    items: arrayOf(shape({\r\n      bulletClass: string,\r\n      bulletOnClick: func,\r\n      description: node,\r\n      original: string.isRequired,\r\n      fullscreen: string,\r\n      originalAlt: string,\r\n      originalTitle: string,\r\n      thumbnail: string,\r\n      thumbnailAlt: string,\r\n      thumbnailLabel: string,\r\n      thumbnailTitle: string,\r\n      originalClass: string,\r\n      thumbnailClass: string,\r\n      renderItem: func,\r\n      renderThumbInner: func,\r\n      imageSet: imageSetType,\r\n      srcSet: string,\r\n      sizes: string,\r\n    })).isRequired,\r\n    showNav: bool,\r\n    autoPlay: bool,\r\n    lazyLoad: bool,\r\n    infinite: bool,\r\n    showIndex: bool,\r\n    showBullets: bool,\r\n    showThumbnails: bool,\r\n    showPlayButton: bool,\r\n    showFullscreenButton: bool,\r\n    disableThumbnailScroll: bool,\r\n    disableKeyDown: bool,\r\n    disableSwipe: bool,\r\n    useBrowserFullscreen: bool,\r\n    preventDefaultTouchmoveEvent: bool,\r\n    onErrorImageURL: string,\r\n    indexSeparator: string,\r\n    thumbnailPosition: oneOf(['top', 'bottom', 'left', 'right']),\r\n    startIndex: number,\r\n    slideDuration: number,\r\n    slideInterval: number,\r\n    slideOnThumbnailOver: bool,\r\n    swipeThreshold: number,\r\n    swipingTransitionDuration: number,\r\n    onSlide: func,\r\n    onBeforeSlide: func,\r\n    onScreenChange: func,\r\n    onPause: func,\r\n    onPlay: func,\r\n    onClick: func,\r\n    onImageLoad: func,\r\n    onImageError: func,\r\n    onTouchMove: func,\r\n    onTouchEnd: func,\r\n    onTouchStart: func,\r\n    onMouseOver: func,\r\n    onMouseLeave: func,\r\n    onThumbnailError: func,\r\n    onThumbnailClick: func,\r\n    renderCustomControls: func,\r\n    renderLeftNav: func,\r\n    renderRightNav: func,\r\n    renderPlayPauseButton: func,\r\n    renderFullscreenButton: func,\r\n    renderItem: func,\r\n    renderThumbInner: func,\r\n    stopPropagation: bool,\r\n    additionalClass: string,\r\n    useTranslate3D: bool,\r\n    isRTL: bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    onErrorImageURL: '',\r\n    additionalClass: '',\r\n    showNav: true,\r\n    autoPlay: false,\r\n    lazyLoad: false,\r\n    infinite: true,\r\n    showIndex: false,\r\n    showBullets: false,\r\n    showThumbnails: true,\r\n    showPlayButton: true,\r\n    showFullscreenButton: true,\r\n    disableThumbnailScroll: false,\r\n    disableKeyDown: false,\r\n    disableSwipe: false,\r\n    useTranslate3D: true,\r\n    isRTL: false,\r\n    useBrowserFullscreen: true,\r\n    preventDefaultTouchmoveEvent: false,\r\n    flickThreshold: 0.4,\r\n    stopPropagation: false,\r\n    indexSeparator: ' / ',\r\n    thumbnailPosition: 'bottom',\r\n    startIndex: 0,\r\n    slideDuration: 450,\r\n    swipingTransitionDuration: 0,\r\n    onSlide: null,\r\n    onBeforeSlide: null,\r\n    onScreenChange: null,\r\n    onPause: null,\r\n    onPlay: null,\r\n    onClick: null,\r\n    onImageLoad: null,\r\n    onImageError: null,\r\n    onTouchMove: null,\r\n    onTouchEnd: null,\r\n    onTouchStart: null,\r\n    onMouseOver: null,\r\n    onMouseLeave: null,\r\n    onThumbnailError: null,\r\n    onThumbnailClick: null,\r\n    renderCustomControls: null,\r\n    renderThumbInner: null,\r\n    renderItem: null,\r\n    slideInterval: 3000,\r\n    slideOnThumbnailOver: false,\r\n    swipeThreshold: 30,\r\n    renderLeftNav: (onClick, disabled) => (\r\n      <button\r\n        type=\"button\"\r\n        className=\"image-gallery-icon image-gallery-left-nav\"\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        aria-label=\"Previous Slide\"\r\n      >\r\n        <SVG icon=\"left\" viewBox=\"6 0 12 24\" />\r\n      </button>\r\n    ),\r\n    renderRightNav: (onClick, disabled) => (\r\n      <button\r\n        type=\"button\"\r\n        className=\"image-gallery-icon image-gallery-right-nav\"\r\n        disabled={disabled}\r\n        onClick={onClick}\r\n        aria-label=\"Next Slide\"\r\n      >\r\n        <SVG icon=\"right\" viewBox=\"6 0 12 24\" />\r\n      </button>\r\n    ),\r\n    renderPlayPauseButton: (onClick, isPlaying) => (\r\n      <button\r\n        type=\"button\"\r\n        className=\"image-gallery-icon image-gallery-play-button\"\r\n        onClick={onClick}\r\n        aria-label=\"Play or Pause Slideshow\"\r\n      >\r\n        <SVG strokeWidth={2} icon={isPlaying ? 'pause' : 'play'} />\r\n      </button>\r\n    ),\r\n    renderFullscreenButton: (onClick, isFullscreen) => (\r\n      <button\r\n        type=\"button\"\r\n        className=\"image-gallery-icon image-gallery-fullscreen-button\"\r\n        onClick={onClick}\r\n        aria-label=\"Open Fullscreen\"\r\n      >\r\n        <SVG strokeWidth={2} icon={isFullscreen ? 'minimize' : 'maximize'} />\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentIndex: props.startIndex,\r\n      thumbsTranslate: 0,\r\n      currentSlideOffset: 0,\r\n      galleryWidth: 0,\r\n      thumbnailsWrapperWidth: 0,\r\n      thumbnailsWrapperHeight: 0,\r\n      isFullscreen: false,\r\n      isPlaying: false,\r\n    };\r\n    this.loadedImages = {};\r\n    this.imageGallery = React.createRef();\r\n    this.thumbnailsWrapper = React.createRef();\r\n    this.thumbnails = React.createRef();\r\n    this.imageGallerySlideWrapper = React.createRef();\r\n\r\n    // bindings\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    this.handleMouseDown = this.handleMouseDown.bind(this);\r\n    this.handleOnSwiped = this.handleOnSwiped.bind(this);\r\n    this.handleScreenChange = this.handleScreenChange.bind(this);\r\n    this.handleSwiping = this.handleSwiping.bind(this);\r\n    this.onThumbnailMouseLeave = this.onThumbnailMouseLeave.bind(this);\r\n    this.handleImageError = this.handleImageError.bind(this);\r\n    this.pauseOrPlay = this.pauseOrPlay.bind(this);\r\n    this.renderThumbInner = this.renderThumbInner.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n    this.slideLeft = this.slideLeft.bind(this);\r\n    this.slideRight = this.slideRight.bind(this);\r\n    this.toggleFullScreen = this.toggleFullScreen.bind(this);\r\n    this.togglePlay = this.togglePlay.bind(this);\r\n\r\n    // Used to update the throttle if slideDuration changes\r\n    this.unthrottledSlideToIndex = this.slideToIndex;\r\n    this.slideToIndex = throttle(\r\n      this.unthrottledSlideToIndex, props.slideDuration, { trailing: false },\r\n    );\r\n\r\n    if (props.lazyLoad) {\r\n      this.lazyLoaded = [];\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { autoPlay } = this.props;\r\n    if (autoPlay) {\r\n      this.play();\r\n    }\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    window.addEventListener('mousedown', this.handleMouseDown);\r\n    this.initResizeObserver(this.imageGallerySlideWrapper);\r\n    this.addScreenChangeEvent();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const {\r\n      items,\r\n      lazyLoad,\r\n      slideDuration,\r\n      startIndex,\r\n      thumbnailPosition,\r\n      showThumbnails,\r\n    } = this.props;\r\n    const { currentIndex } = this.state;\r\n    const itemsSizeChanged = prevProps.items.length !== items.length;\r\n    const itemsChanged = !isEqual(prevProps.items, items);\r\n    const startIndexUpdated = prevProps.startIndex !== startIndex;\r\n    const thumbnailsPositionChanged = prevProps.thumbnailPosition !== thumbnailPosition;\r\n    const showThumbnailsChanged = prevProps.showThumbnails !== showThumbnails;\r\n\r\n    if (thumbnailsPositionChanged) {\r\n      // re-initialize resizeObserver because slides was unmounted and mounted again\r\n      this.removeResizeObserver();\r\n      this.initResizeObserver(this.imageGallerySlideWrapper);\r\n    }\r\n\r\n    if (itemsSizeChanged || showThumbnailsChanged) {\r\n      this.handleResize();\r\n    }\r\n    if (prevState.currentIndex !== currentIndex) {\r\n      this.slideThumbnailBar(prevState.currentIndex);\r\n    }\r\n    // if slideDuration changes, update slideToIndex throttle\r\n    if (prevProps.slideDuration !== slideDuration) {\r\n      this.slideToIndex = throttle(\r\n        this.unthrottledSlideToIndex, slideDuration, { trailing: false },\r\n      );\r\n    }\r\n    if (lazyLoad && (!prevProps.lazyLoad || itemsChanged)) {\r\n      this.lazyLoaded = [];\r\n    }\r\n\r\n    if (startIndexUpdated || itemsChanged) {\r\n      // TODO: this should be fix/removed if all it is doing\r\n      // is resetting the gallery currentIndext state\r\n      this.setState({ currentIndex: startIndex });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n    window.removeEventListener('mousedown', this.handleMouseDown);\r\n    this.removeScreenChangeEvent();\r\n    this.removeResizeObserver();\r\n    if (this.playPauseIntervalId) {\r\n      window.clearInterval(this.playPauseIntervalId);\r\n      this.playPauseIntervalId = null;\r\n    }\r\n    if (this.transitionTimer) {\r\n      window.clearTimeout(this.transitionTimer);\r\n    }\r\n  }\r\n\r\n  onSliding() {\r\n    const { currentIndex, isTransitioning } = this.state;\r\n    const { onSlide, slideDuration } = this.props;\r\n    this.transitionTimer = window.setTimeout(() => {\r\n      if (isTransitioning) {\r\n        this.setState({ isTransitioning: !isTransitioning });\r\n        if (onSlide) {\r\n          onSlide(currentIndex);\r\n        }\r\n      }\r\n    }, slideDuration + 50);\r\n  }\r\n\r\n  onThumbnailClick(event, index) {\r\n    const { onThumbnailClick } = this.props;\r\n    this.slideToIndex(index, event);\r\n    if (onThumbnailClick) {\r\n      onThumbnailClick(event, index);\r\n    }\r\n  }\r\n\r\n  onThumbnailMouseOver(event, index) {\r\n    if (this.thumbnailMouseOverTimer) {\r\n      window.clearTimeout(this.thumbnailMouseOverTimer);\r\n      this.thumbnailMouseOverTimer = null;\r\n    }\r\n    this.thumbnailMouseOverTimer = window.setTimeout(() => {\r\n      this.slideToIndex(index);\r\n      this.pause();\r\n    }, 300);\r\n  }\r\n\r\n  onThumbnailMouseLeave() {\r\n    if (this.thumbnailMouseOverTimer) {\r\n      const { autoPlay } = this.props;\r\n      window.clearTimeout(this.thumbnailMouseOverTimer);\r\n      this.thumbnailMouseOverTimer = null;\r\n      if (autoPlay) {\r\n        this.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  setScrollDirection(dir) {\r\n    const { scrollingUpDown, scrollingLeftRight } = this.state;\r\n\r\n    if (!scrollingUpDown && !scrollingLeftRight) {\r\n      if (dir === LEFT || dir === RIGHT) {\r\n        this.setState({ scrollingLeftRight: true });\r\n      } else {\r\n        this.setState({ scrollingUpDown: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  setThumbsTranslate(thumbsTranslate) {\r\n    this.setState({ thumbsTranslate });\r\n  }\r\n\r\n  setModalFullscreen(state) {\r\n    const { onScreenChange } = this.props;\r\n    this.setState({ modalFullscreen: state });\r\n    // manually call because browser does not support screenchange events\r\n    if (onScreenChange) {\r\n      onScreenChange(state);\r\n    }\r\n  }\r\n\r\n  getThumbsTranslate(indexDifference) {\r\n    const { disableThumbnailScroll, items } = this.props;\r\n    const { thumbnailsWrapperWidth, thumbnailsWrapperHeight } = this.state;\r\n    let totalScroll;\r\n    const thumbElement = this.thumbnails && this.thumbnails.current;\r\n\r\n    if (disableThumbnailScroll) return 0;\r\n\r\n    if (thumbElement) {\r\n      // total scroll required to see the last thumbnail\r\n      if (this.isThumbnailVertical()) {\r\n        if (thumbElement.scrollHeight <= thumbnailsWrapperHeight) {\r\n          return 0;\r\n        }\r\n        totalScroll = thumbElement.scrollHeight - thumbnailsWrapperHeight;\r\n      } else {\r\n        if (thumbElement.scrollWidth <= thumbnailsWrapperWidth || thumbnailsWrapperWidth <= 0) {\r\n          return 0;\r\n        }\r\n        totalScroll = thumbElement.scrollWidth - thumbnailsWrapperWidth;\r\n      }\r\n      // scroll-x required per index change\r\n      const perIndexScroll = totalScroll / (items.length - 1);\r\n      return indexDifference * perIndexScroll;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getAlignmentClassName(index) {\r\n    // Necessary for lazing loading\r\n    const { currentIndex } = this.state;\r\n    const { infinite, items } = this.props;\r\n    let alignment = '';\r\n    const leftClassName = 'left';\r\n    const centerClassName = 'center';\r\n    const rightClassName = 'right';\r\n\r\n    switch (index) {\r\n      case (currentIndex - 1):\r\n        alignment = ` ${leftClassName}`;\r\n        break;\r\n      case (currentIndex):\r\n        alignment = ` ${centerClassName}`;\r\n        break;\r\n      case (currentIndex + 1):\r\n        alignment = ` ${rightClassName}`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (items.length >= 3 && infinite) {\r\n      if (index === 0 && currentIndex === items.length - 1) {\r\n        // set first slide as right slide if were sliding right from last slide\r\n        alignment = ` ${rightClassName}`;\r\n      } else if (index === items.length - 1 && currentIndex === 0) {\r\n        // set last slide as left slide if were sliding left from first slide\r\n        alignment = ` ${leftClassName}`;\r\n      }\r\n    }\r\n\r\n    return alignment;\r\n  }\r\n\r\n  getTranslateXForTwoSlide(index) {\r\n    // For taking care of infinite swipe when there are only two slides\r\n    const { currentIndex, currentSlideOffset, previousIndex } = this.state;\r\n    const indexChanged = currentIndex !== previousIndex;\r\n    const firstSlideWasPrevSlide = index === 0 && previousIndex === 0;\r\n    const secondSlideWasPrevSlide = index === 1 && previousIndex === 1;\r\n    const firstSlideIsNextSlide = index === 0 && currentIndex === 1;\r\n    const secondSlideIsNextSlide = index === 1 && currentIndex === 0;\r\n    const swipingEnded = currentSlideOffset === 0;\r\n    const baseTranslateX = -100 * currentIndex;\r\n    let translateX = baseTranslateX + (index * 100) + currentSlideOffset;\r\n\r\n    // keep track of user swiping direction\r\n    // important to understand how to translateX based on last direction\r\n    if (currentSlideOffset > 0) {\r\n      this.direction = 'left';\r\n    } else if (currentSlideOffset < 0) {\r\n      this.direction = 'right';\r\n    }\r\n\r\n\r\n    // when swiping between two slides make sure the next and prev slides\r\n    // are on both left and right\r\n    if (secondSlideIsNextSlide && currentSlideOffset > 0) { // swiping right\r\n      translateX = -100 + currentSlideOffset;\r\n    }\r\n    if (firstSlideIsNextSlide && currentSlideOffset < 0) { // swiping left\r\n      translateX = 100 + currentSlideOffset;\r\n    }\r\n\r\n    if (indexChanged) {\r\n      // when indexChanged move the slide to the correct side\r\n      if (firstSlideWasPrevSlide && swipingEnded && this.direction === 'left') {\r\n        translateX = 100;\r\n      } else if (secondSlideWasPrevSlide && swipingEnded && this.direction === 'right') {\r\n        translateX = -100;\r\n      }\r\n    } else {\r\n      // keep the slide on the correct side if the swipe was not successful\r\n      if (secondSlideIsNextSlide && swipingEnded && this.direction === 'left') {\r\n        translateX = -100;\r\n      }\r\n      if (firstSlideIsNextSlide && swipingEnded && this.direction === 'right') {\r\n        translateX = 100;\r\n      }\r\n    }\r\n\r\n    return translateX;\r\n  }\r\n\r\n  getThumbnailBarHeight() {\r\n    if (this.isThumbnailVertical()) {\r\n      const { gallerySlideWrapperHeight } = this.state;\r\n      return { height: gallerySlideWrapperHeight };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  getSlideStyle(index) {\r\n    const { currentIndex, currentSlideOffset, slideStyle } = this.state;\r\n    const {\r\n      infinite,\r\n      items,\r\n      useTranslate3D,\r\n      isRTL,\r\n    } = this.props;\r\n    const baseTranslateX = -100 * currentIndex;\r\n    const totalSlides = items.length - 1;\r\n\r\n    // calculates where the other slides belong based on currentIndex\r\n    // if it is RTL the base line should be reversed\r\n    let translateX = (baseTranslateX + (index * 100)) * (isRTL ? -1 : 1) + currentSlideOffset;\r\n\r\n    if (infinite && items.length > 2) {\r\n      if (currentIndex === 0 && index === totalSlides) {\r\n        // make the last slide the slide before the first\r\n        // if it is RTL the base line should be reversed\r\n        translateX = -100 * (isRTL ? -1 : 1) + currentSlideOffset;\r\n      } else if (currentIndex === totalSlides && index === 0) {\r\n        // make the first slide the slide after the last\r\n        // if it is RTL the base line should be reversed\r\n        translateX = 100 * (isRTL ? -1 : 1) + currentSlideOffset;\r\n      }\r\n    }\r\n\r\n    // Special case when there are only 2 items with infinite on\r\n    if (infinite && items.length === 2) {\r\n      translateX = this.getTranslateXForTwoSlide(index);\r\n    }\r\n\r\n    let translate = `translate(${translateX}%, 0)`;\r\n\r\n    if (useTranslate3D) {\r\n      translate = `translate3d(${translateX}%, 0, 0)`;\r\n    }\r\n\r\n    return Object.assign({}, {\r\n      WebkitTransform: translate,\r\n      MozTransform: translate,\r\n      msTransform: translate,\r\n      OTransform: translate,\r\n      transform: translate,\r\n    }, slideStyle);\r\n  }\r\n\r\n  getCurrentIndex() {\r\n    const { currentIndex } = this.state;\r\n    return currentIndex;\r\n  }\r\n\r\n  getThumbnailStyle() {\r\n    let translate;\r\n    const { useTranslate3D, isRTL } = this.props;\r\n    const { thumbsTranslate } = this.state;\r\n    const verticalTranslateValue = isRTL ? thumbsTranslate * -1 : thumbsTranslate;\r\n\r\n    if (this.isThumbnailVertical()) {\r\n      translate = `translate(0, ${thumbsTranslate}px)`;\r\n      if (useTranslate3D) {\r\n        translate = `translate3d(0, ${thumbsTranslate}px, 0)`;\r\n      }\r\n    } else {\r\n      translate = `translate(${verticalTranslateValue}px, 0)`;\r\n      if (useTranslate3D) {\r\n        translate = `translate3d(${verticalTranslateValue}px, 0, 0)`;\r\n      }\r\n    }\r\n    return {\r\n      WebkitTransform: translate,\r\n      MozTransform: translate,\r\n      msTransform: translate,\r\n      OTransform: translate,\r\n      transform: translate,\r\n    };\r\n  }\r\n\r\n  getSlideItems() {\r\n\r\n    const { currentIndex } = this.state;\r\n    const {\r\n      infinite,\r\n      items,\r\n      slideOnThumbnailOver,\r\n      onClick,\r\n      lazyLoad,\r\n      onTouchMove,\r\n      onTouchEnd,\r\n      onTouchStart,\r\n      onMouseOver,\r\n      onMouseLeave,\r\n      renderItem,\r\n      renderThumbInner,\r\n      showThumbnails,\r\n      showBullets,\r\n    } = this.props;\r\n\r\n    const slides = [];\r\n    const thumbnails = [];\r\n    const bullets = [];\r\n\r\n    items.forEach((item, index) => {\r\n      const alignment = this.getAlignmentClassName(index);\r\n      const originalClass = item.originalClass ? ` ${item.originalClass}` : '';\r\n      const thumbnailClass = item.thumbnailClass ? ` ${item.thumbnailClass}` : '';\r\n      const handleRenderItem = item.renderItem || renderItem || this.renderItem;\r\n      const handleRenderThumbInner = item.renderThumbInner\r\n        || renderThumbInner || this.renderThumbInner;\r\n\r\n      const showItem = !lazyLoad || alignment || this.lazyLoaded[index];\r\n      if (showItem && lazyLoad && !this.lazyLoaded[index]) {\r\n        this.lazyLoaded[index] = true;\r\n      }\r\n\r\n      const slideStyle_tmp = this.getSlideStyle(index);\r\n      const slideStyle = infinite&&(this.shouldPushSlideOnInfiniteMode(index))?slideStyle_tmp:Object.assign(slideStyle_tmp,{\"display\":\"none\"})\r\n\r\n      const slide = (\r\n        <div\r\n          key={`slide-${item.original}-${index}`}\r\n          tabIndex=\"-1\"\r\n          className={`image-gallery-slide ${alignment} ${originalClass}`}\r\n          style={slideStyle}\r\n          onClick={onClick}\r\n          onKeyUp={this.handleSlideKeyUp}\r\n          onTouchMove={onTouchMove}\r\n          onTouchEnd={onTouchEnd}\r\n          onTouchStart={onTouchStart}\r\n          onMouseOver={onMouseOver}\r\n          onFocus={onMouseOver}\r\n          onMouseLeave={onMouseLeave}\r\n          role=\"button\"\r\n        >\r\n          {showItem ? handleRenderItem(item) : <div style={{ height: '100%' }} />}\r\n        </div>\r\n      );\r\n\r\n      if (infinite) {\r\n        // don't add some slides while transitioning to avoid background transitions\r\n        // if (this.shouldPushSlideOnInfiniteMode(index)) {\r\n          slides.push(slide);\r\n        // }\r\n      } else {\r\n        slides.push(slide);\r\n      }\r\n\r\n      if (showThumbnails) {\r\n        const igThumbnailClass = clsx(\r\n          'image-gallery-thumbnail',\r\n          thumbnailClass,\r\n          { active: currentIndex === index },\r\n        );\r\n        thumbnails.push(\r\n          <button\r\n            key={`thumbnail-${item.original}-${index}`}\r\n            type=\"button\"\r\n            tabIndex=\"0\"\r\n            aria-pressed={currentIndex === index ? 'true' : 'false'}\r\n            aria-label={`Go to Slide ${index + 1}`}\r\n            className={igThumbnailClass}\r\n            onMouseLeave={slideOnThumbnailOver ? this.onThumbnailMouseLeave : null}\r\n            onMouseOver={event => this.handleThumbnailMouseOver(event, index)}\r\n            onFocus={event => this.handleThumbnailMouseOver(event, index)}\r\n            onKeyUp={event => this.handleThumbnailKeyUp(event, index)}\r\n            onClick={event => this.onThumbnailClick(event, index)}\r\n          >\r\n            {handleRenderThumbInner(item)}\r\n          </button>,\r\n        );\r\n      }\r\n\r\n      if (showBullets) {\r\n        // generate bullet elements and store them in array\r\n        const bulletOnClick = (event) => {\r\n          if (item.bulletOnClick) {\r\n            item.bulletOnClick({ item, itemIndex: index, currentIndex });\r\n          }\r\n          return this.slideToIndex.call(this, index, event);\r\n        };\r\n        const igBulletClass = clsx(\r\n          'image-gallery-bullet',\r\n          item.bulletClass,\r\n          { active: currentIndex === index },\r\n        );\r\n        bullets.push(\r\n          <button\r\n            type=\"button\"\r\n            key={`bullet-${item.original}-${index}`}\r\n            className={igBulletClass}\r\n            onClick={bulletOnClick}\r\n            aria-pressed={currentIndex === index ? 'true' : 'false'}\r\n            aria-label={`Go to Slide ${index + 1}`}\r\n          />,\r\n        );\r\n      }\r\n    });\r\n\r\n    return {\r\n      slides,\r\n      thumbnails,\r\n      bullets,\r\n    };\r\n  }\r\n\r\n  ignoreIsTransitioning() {\r\n    /*\r\n      Ignore isTransitioning because were not going to sibling slides\r\n      e.g. center to left or center to right\r\n    */\r\n    const { items } = this.props;\r\n    const { previousIndex, currentIndex } = this.state;\r\n    const totalSlides = items.length - 1;\r\n    // we want to show the in between slides transition\r\n    const slidingMoreThanOneSlideLeftOrRight = Math.abs(previousIndex - currentIndex) > 1;\r\n    const notGoingFromFirstToLast = !(previousIndex === 0 && currentIndex === totalSlides);\r\n    const notGoingFromLastToFirst = !(previousIndex === totalSlides && currentIndex === 0);\r\n\r\n    return slidingMoreThanOneSlideLeftOrRight\r\n      && notGoingFromFirstToLast\r\n      && notGoingFromLastToFirst;\r\n  }\r\n\r\n  isFirstOrLastSlide(index) {\r\n    const { items } = this.props;\r\n    const totalSlides = items.length - 1;\r\n    const isLastSlide = index === totalSlides;\r\n    const isFirstSlide = index === 0;\r\n    return isLastSlide || isFirstSlide;\r\n  }\r\n\r\n\r\n  slideIsTransitioning(index) {\r\n    /*\r\n    returns true if the gallery is transitioning and the index is not the\r\n    previous or currentIndex\r\n    */\r\n    const { isTransitioning, previousIndex, currentIndex } = this.state;\r\n    const indexIsNotPreviousOrNextSlide = !(index === previousIndex || index === currentIndex);\r\n    return isTransitioning && indexIsNotPreviousOrNextSlide;\r\n  }\r\n\r\n  shouldPushSlideOnInfiniteMode(index) {\r\n    /*\r\n      Push (show) slide if slide is the current slide and the next slide\r\n      OR\r\n      The slide is going more than one slide left or right, but not going from\r\n      first to last and not going from last to first\r\n\r\n      Edge case:\r\n      If you go to the first or last slide, when they're\r\n      not left, or right of each other they will try to catch up in the background\r\n      so unless were going from first to last or vice versa we don't want the first\r\n      or last slide to show up during the transition\r\n    */\r\n    return !this.slideIsTransitioning(index)\r\n      || (this.ignoreIsTransitioning() && !this.isFirstOrLastSlide(index));\r\n  }\r\n\r\n  slideThumbnailBar(previousIndex) {\r\n    const { thumbsTranslate, currentIndex } = this.state;\r\n    if (currentIndex === 0) {\r\n      this.setThumbsTranslate(0);\r\n    } else {\r\n      const indexDifference = Math.abs(previousIndex - currentIndex);\r\n      const scroll = this.getThumbsTranslate(indexDifference);\r\n      if (scroll > 0) {\r\n        if (previousIndex < currentIndex) {\r\n          this.setThumbsTranslate(thumbsTranslate - scroll);\r\n        } else if (previousIndex > currentIndex) {\r\n          this.setThumbsTranslate(thumbsTranslate + scroll);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  canSlide() {\r\n    const { items } = this.props;\r\n    return items.length >= 2;\r\n  }\r\n\r\n  canSlideLeft() {\r\n    const { infinite, isRTL } = this.props;\r\n    return infinite || (isRTL ? this.canSlideNext() : this.canSlidePrevious());\r\n  }\r\n\r\n  canSlideRight() {\r\n    const { infinite, isRTL } = this.props;\r\n    return infinite || (isRTL ? this.canSlidePrevious() : this.canSlideNext());\r\n  }\r\n\r\n  canSlidePrevious() {\r\n    const { currentIndex } = this.state;\r\n    return currentIndex > 0;\r\n  }\r\n\r\n  canSlideNext() {\r\n    const { currentIndex } = this.state;\r\n    const { items } = this.props;\r\n    return currentIndex < items.length - 1;\r\n  }\r\n\r\n  handleSwiping({ event, absX, dir }) {\r\n    const { preventDefaultTouchmoveEvent, disableSwipe, stopPropagation } = this.props;\r\n    const {\r\n      galleryWidth,\r\n      isTransitioning,\r\n      scrollingUpDown,\r\n      scrollingLeftRight,\r\n    } = this.state;\r\n\r\n    if (disableSwipe) return;\r\n    const { swipingTransitionDuration } = this.props;\r\n    this.setScrollDirection(dir);\r\n    if (stopPropagation) event.stopPropagation();\r\n    if ((preventDefaultTouchmoveEvent || scrollingLeftRight) && event.cancelable) {\r\n      event.preventDefault();\r\n    }\r\n    if (!isTransitioning && !scrollingUpDown) {\r\n      const side = dir === RIGHT ? 1 : -1;\r\n\r\n      let currentSlideOffset = (absX / galleryWidth * 100);\r\n      if (Math.abs(currentSlideOffset) >= 100) {\r\n        currentSlideOffset = 100;\r\n      }\r\n\r\n      const swipingTransition = {\r\n        transition: `transform ${swipingTransitionDuration}ms ease-out`,\r\n      };\r\n\r\n      this.setState({\r\n        currentSlideOffset: side * currentSlideOffset,\r\n        slideStyle: swipingTransition,\r\n      });\r\n    } else {\r\n      // don't move the slide\r\n      this.setState({ currentSlideOffset: 0 });\r\n    }\r\n  }\r\n\r\n  sufficientSwipe() {\r\n    const { currentSlideOffset } = this.state;\r\n    const { swipeThreshold } = this.props;\r\n    return Math.abs(currentSlideOffset) > swipeThreshold;\r\n  }\r\n\r\n  handleOnSwiped({ event, dir, velocity }) {\r\n    const { disableSwipe, stopPropagation, flickThreshold } = this.props;\r\n    const { scrollingUpDown, scrollingLeftRight } = this.state;\r\n\r\n    if (disableSwipe) return;\r\n\r\n    const { isRTL } = this.props;\r\n    if (stopPropagation) event.stopPropagation();\r\n    if (scrollingUpDown) {\r\n      // user stopped scrollingUpDown\r\n      this.setState({ scrollingUpDown: false });\r\n    }\r\n\r\n    if (scrollingLeftRight) {\r\n      // user stopped scrollingLeftRight\r\n      this.setState({ scrollingLeftRight: false });\r\n    }\r\n\r\n    if (!scrollingUpDown) { // don't swipe if user is scrolling\r\n      // if it is RTL the direction is reversed\r\n      const swipeDirection = (dir === LEFT ? 1 : -1) * (isRTL ? -1 : 1);\r\n      const isFlick = velocity > flickThreshold;\r\n      this.handleOnSwipedTo(swipeDirection, isFlick);\r\n    }\r\n  }\r\n\r\n  handleOnSwipedTo(swipeDirection, isFlick) {\r\n    const { currentIndex, isTransitioning } = this.state;\r\n    let slideTo = currentIndex;\r\n\r\n    if ((this.sufficientSwipe() || isFlick) && !isTransitioning) {\r\n      // slideto the next/prev slide\r\n      slideTo += swipeDirection;\r\n    }\r\n\r\n    // If we can't swipe left or right, stay in the current index (noop)\r\n    if ((swipeDirection === -1 && !this.canSlideLeft())\r\n        || (swipeDirection === 1 && !this.canSlideRight())) {\r\n      slideTo = currentIndex;\r\n    }\r\n\r\n    this.unthrottledSlideToIndex(slideTo);\r\n  }\r\n\r\n  handleMouseDown() {\r\n    // keep track of mouse vs keyboard usage for a11y\r\n    this.imageGallery.current.classList.add('image-gallery-using-mouse');\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    const { disableKeyDown, useBrowserFullscreen } = this.props;\r\n    const { isFullscreen } = this.state;\r\n    // keep track of mouse vs keyboard usage for a11y\r\n    this.imageGallery.current.classList.remove('image-gallery-using-mouse');\r\n\r\n    if (disableKeyDown) return;\r\n    const LEFT_ARROW = 37;\r\n    const RIGHT_ARROW = 39;\r\n    const ESC_KEY = 27;\r\n    const key = parseInt(event.keyCode || event.which || 0, 10);\r\n\r\n    switch (key) {\r\n      case LEFT_ARROW:\r\n        if (this.canSlideLeft() && !this.playPauseIntervalId) {\r\n          this.slideLeft(event);\r\n        }\r\n        break;\r\n      case RIGHT_ARROW:\r\n        if (this.canSlideRight() && !this.playPauseIntervalId) {\r\n          this.slideRight(event);\r\n        }\r\n        break;\r\n      case ESC_KEY:\r\n        if (isFullscreen && !useBrowserFullscreen) {\r\n          this.exitFullScreen();\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleImageError(event) {\r\n    const { onErrorImageURL } = this.props;\r\n    if (onErrorImageURL && event.target.src.indexOf(onErrorImageURL) === -1) {\r\n      /* eslint-disable no-param-reassign */\r\n      event.target.src = onErrorImageURL;\r\n      /* eslint-enable no-param-reassign */\r\n    }\r\n  }\r\n\r\n  removeResizeObserver() {\r\n    if (this.resizeObserver\r\n        && this.imageGallerySlideWrapper && this.imageGallerySlideWrapper.current) {\r\n      this.resizeObserver.unobserve(this.imageGallerySlideWrapper.current);\r\n    }\r\n  }\r\n\r\n  handleResize() {\r\n    const { currentIndex } = this.state;\r\n    if (this.imageGallery && this.imageGallery.current) {\r\n      this.setState({ galleryWidth: this.imageGallery.current.offsetWidth });\r\n    }\r\n\r\n    if (this.imageGallerySlideWrapper && this.imageGallerySlideWrapper.current) {\r\n      this.setState({\r\n        gallerySlideWrapperHeight: this.imageGallerySlideWrapper.current.offsetHeight,\r\n      });\r\n    }\r\n\r\n    if (this.thumbnailsWrapper && this.thumbnailsWrapper.current) {\r\n      if (this.isThumbnailVertical()) {\r\n        this.setState({ thumbnailsWrapperHeight: this.thumbnailsWrapper.current.offsetHeight });\r\n      } else {\r\n        this.setState({ thumbnailsWrapperWidth: this.thumbnailsWrapper.current.offsetWidth });\r\n      }\r\n    }\r\n\r\n    // Adjust thumbnail container when thumbnail width or height is adjusted\r\n    this.setThumbsTranslate(-this.getThumbsTranslate(currentIndex));\r\n  }\r\n\r\n  initResizeObserver(element) {\r\n    this.resizeObserver = new ResizeObserver(debounce((entries) => {\r\n      if (!entries) return;\r\n      entries.forEach(() => {\r\n        this.handleResize();\r\n      });\r\n    }, 300));\r\n    this.resizeObserver.observe(element.current);\r\n  }\r\n\r\n  toggleFullScreen() {\r\n    const { isFullscreen } = this.state;\r\n    if (isFullscreen) {\r\n      this.exitFullScreen();\r\n    } else {\r\n      this.fullScreen();\r\n    }\r\n  }\r\n\r\n  togglePlay() {\r\n    if (this.playPauseIntervalId) {\r\n      this.pause();\r\n    } else {\r\n      this.play();\r\n    }\r\n  }\r\n\r\n\r\n  handleScreenChange() {\r\n    /*\r\n      handles screen change events that the browser triggers e.g. esc key\r\n    */\r\n    const { onScreenChange, useBrowserFullscreen } = this.props;\r\n    const fullScreenElement = document.fullscreenElement\r\n      || document.msFullscreenElement\r\n      || document.mozFullScreenElement\r\n      || document.webkitFullscreenElement;\r\n\r\n    // check if screenchange element is the gallery\r\n    const isFullscreen = this.imageGallery.current === fullScreenElement;\r\n    if (onScreenChange) onScreenChange(isFullscreen);\r\n    if (useBrowserFullscreen) this.setState({ isFullscreen });\r\n  }\r\n\r\n  slideToIndex(index, event) {\r\n    const { currentIndex, isTransitioning } = this.state;\r\n    const { items, slideDuration, onBeforeSlide } = this.props;\r\n\r\n    if (!isTransitioning) {\r\n      if (event) {\r\n        if (this.playPauseIntervalId) {\r\n          // user triggered event while ImageGallery is playing, reset interval\r\n          this.pause(false);\r\n          this.play(false);\r\n        }\r\n      }\r\n\r\n      const slideCount = items.length - 1;\r\n      let nextIndex = index;\r\n      if (index < 0) {\r\n        nextIndex = slideCount;\r\n      } else if (index > slideCount) {\r\n        nextIndex = 0;\r\n      }\r\n\r\n      if (onBeforeSlide && nextIndex !== currentIndex) {\r\n        onBeforeSlide(nextIndex);\r\n      }\r\n\r\n      this.setState({\r\n        previousIndex: currentIndex,\r\n        currentIndex: nextIndex,\r\n        isTransitioning: nextIndex !== currentIndex,\r\n        currentSlideOffset: 0,\r\n        slideStyle: { transition: `all ${slideDuration}ms ease-out` },\r\n      }, this.onSliding);\r\n    }\r\n  }\r\n\r\n  slideLeft(event) {\r\n    const { isRTL } = this.props;\r\n    if (isRTL) {\r\n      this.slideNext(event);\r\n    } else {\r\n      this.slidePrevious(event);\r\n    }\r\n  }\r\n\r\n  slideRight(event) {\r\n    const { isRTL } = this.props;\r\n    if (isRTL) {\r\n      this.slidePrevious(event);\r\n    } else {\r\n      this.slideNext(event);\r\n    }\r\n  }\r\n\r\n  slidePrevious(event) {\r\n    const { currentIndex, currentSlideOffset, isTransitioning } = this.state;\r\n    const { items } = this.props;\r\n    const nextIndex = currentIndex - 1;\r\n\r\n    if (isTransitioning) return;\r\n\r\n    if (items.length === 2) {\r\n      /*\r\n        When there are only 2 slides fake a tiny swipe to get the slides\r\n        on the correct side for transitioning\r\n      */\r\n      this.setState({\r\n        currentSlideOffset: currentSlideOffset + 0.001, // this will reset once index changes\r\n        slideStyle: { transition: 'none' }, // move the slide over instantly\r\n      }, () => {\r\n        // add 25ms timeout to avoid delay in moving slides over\r\n        window.setTimeout(() => this.slideToIndex(nextIndex, event), 25);\r\n      });\r\n    } else {\r\n      this.slideToIndex(nextIndex, event);\r\n    }\r\n  }\r\n\r\n  slideNext(event) {\r\n    const { currentIndex, currentSlideOffset, isTransitioning } = this.state;\r\n    const { items } = this.props;\r\n    const nextIndex = currentIndex + 1;\r\n\r\n    if (isTransitioning) return;\r\n\r\n    if (items.length === 2) {\r\n      // same as above for 2 slides\r\n      this.setState({\r\n        currentSlideOffset: currentSlideOffset - 0.001,\r\n        slideStyle: { transition: 'none' },\r\n      }, () => {\r\n        window.setTimeout(() => this.slideToIndex(nextIndex, event), 25);\r\n      });\r\n    } else {\r\n      this.slideToIndex(nextIndex, event);\r\n    }\r\n  }\r\n\r\n  handleThumbnailMouseOver(event, index) {\r\n    const { slideOnThumbnailOver } = this.props;\r\n    if (slideOnThumbnailOver) this.onThumbnailMouseOver(event, index);\r\n  }\r\n\r\n  handleThumbnailKeyUp(event, index) {\r\n    // a11y support ^_^\r\n    if (isEnterOrSpaceKey(event)) this.onThumbnailClick(event, index);\r\n  }\r\n\r\n  handleSlideKeyUp(event) {\r\n    // a11y support ^_^\r\n    if (isEnterOrSpaceKey(event)) {\r\n      const { onClick } = this.props;\r\n      onClick(event);\r\n    }\r\n  }\r\n\r\n  isThumbnailVertical() {\r\n    const { thumbnailPosition } = this.props;\r\n    return thumbnailPosition === 'left' || thumbnailPosition === 'right';\r\n  }\r\n\r\n  addScreenChangeEvent() {\r\n    screenChangeEvents.forEach((eventName) => {\r\n      document.addEventListener(eventName, this.handleScreenChange);\r\n    });\r\n  }\r\n\r\n  removeScreenChangeEvent() {\r\n    screenChangeEvents.forEach((eventName) => {\r\n      document.removeEventListener(eventName, this.handleScreenChange);\r\n    });\r\n  }\r\n\r\n  fullScreen() {\r\n    const { useBrowserFullscreen } = this.props;\r\n    const gallery = this.imageGallery.current;\r\n    if (useBrowserFullscreen) {\r\n      if (gallery.requestFullscreen) {\r\n        gallery.requestFullscreen();\r\n      } else if (gallery.msRequestFullscreen) {\r\n        gallery.msRequestFullscreen();\r\n      } else if (gallery.mozRequestFullScreen) {\r\n        gallery.mozRequestFullScreen();\r\n      } else if (gallery.webkitRequestFullscreen) {\r\n        gallery.webkitRequestFullscreen();\r\n      } else {\r\n        // fallback to fullscreen modal for unsupported browsers\r\n        this.setModalFullscreen(true);\r\n      }\r\n    } else {\r\n      this.setModalFullscreen(true);\r\n    }\r\n    this.setState({ isFullscreen: true });\r\n  }\r\n\r\n  exitFullScreen() {\r\n    const { isFullscreen } = this.state;\r\n    const { useBrowserFullscreen } = this.props;\r\n    if (isFullscreen) {\r\n      if (useBrowserFullscreen) {\r\n        if (document.exitFullscreen) {\r\n          document.exitFullscreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n          document.webkitExitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n          document.mozCancelFullScreen();\r\n        } else if (document.msExitFullscreen) {\r\n          document.msExitFullscreen();\r\n        } else {\r\n          // fallback to fullscreen modal for unsupported browsers\r\n          this.setModalFullscreen(false);\r\n        }\r\n      } else {\r\n        this.setModalFullscreen(false);\r\n      }\r\n      this.setState({ isFullscreen: false });\r\n    }\r\n  }\r\n\r\n  pauseOrPlay() {\r\n    const { infinite } = this.props;\r\n    const { currentIndex } = this.state;\r\n    if (!infinite && !this.canSlideRight()) {\r\n      this.pause();\r\n    } else {\r\n      this.slideToIndex(currentIndex + 1);\r\n    }\r\n  }\r\n\r\n  play(shouldCallOnPlay = true) {\r\n    const {\r\n      onPlay,\r\n      slideInterval,\r\n      slideDuration,\r\n    } = this.props;\r\n    const { currentIndex } = this.state;\r\n    if (!this.playPauseIntervalId) {\r\n      this.setState({ isPlaying: true });\r\n      this.playPauseIntervalId = window.setInterval(\r\n        this.pauseOrPlay,\r\n        Math.max(slideInterval, slideDuration),\r\n      );\r\n      if (onPlay && shouldCallOnPlay) {\r\n        onPlay(currentIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  pause(shouldCallOnPause = true) {\r\n    const { onPause } = this.props;\r\n    const { currentIndex } = this.state;\r\n    if (this.playPauseIntervalId) {\r\n      window.clearInterval(this.playPauseIntervalId);\r\n      this.playPauseIntervalId = null;\r\n      this.setState({ isPlaying: false });\r\n      if (onPause && shouldCallOnPause) {\r\n        onPause(currentIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  isImageLoaded(item) {\r\n    /*\r\n      Keep track of images loaded so that onImageLoad prop is not\r\n      called multiple times when re-render the images\r\n    */\r\n    const imageExists = this.loadedImages[item.original];\r\n    if (imageExists) {\r\n      return true;\r\n    }\r\n    // add image as loaded\r\n    this.loadedImages[item.original] = true;\r\n    return false;\r\n  }\r\n\r\n  handleImageLoaded(event, item) {\r\n    const { onImageLoad } = this.props;\r\n    const imageExists = this.loadedImages[item.original];\r\n    if (!imageExists && onImageLoad) {\r\n      this.loadedImages[item.original] = true; // prevent from call again\r\n      // image just loaded, call onImageLoad\r\n      onImageLoad(event);\r\n    }\r\n  }\r\n\r\n  renderItem(item) {\r\n    const { isFullscreen } = this.state;\r\n    const { onImageError } = this.props;\r\n    const handleImageError = onImageError || this.handleImageError;\r\n    const itemSrc = isFullscreen ? (item.fullscreen || item.original) : item.original;\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          item.imageSet ? (\r\n            <picture\r\n              onLoad={event => this.handleImageLoaded(event, item)}\r\n              onError={handleImageError}\r\n            >\r\n              {\r\n                item.imageSet.map((source, index) => (\r\n                  <source\r\n                    key={`media-${source.srcSet}-${index}`}\r\n                    media={source.media}\r\n                    srcSet={source.srcSet}\r\n                    type={source.type}\r\n                  />\r\n                ))\r\n              }\r\n              <img\r\n                className=\"image-gallery-image\"\r\n                alt={item.originalAlt}\r\n                src={itemSrc}\r\n              />\r\n            </picture>\r\n          ) : (\r\n            <img\r\n              className=\"image-gallery-image\"\r\n              src={itemSrc}\r\n              alt={item.originalAlt}\r\n              srcSet={item.srcSet}\r\n              sizes={item.sizes}\r\n              title={item.originalTitle}\r\n              onLoad={event => this.handleImageLoaded(event, item)}\r\n              onError={handleImageError}\r\n            />\r\n          )\r\n        }\r\n\r\n        {\r\n          item.description && (\r\n            <span className=\"image-gallery-description\">\r\n              {item.description}\r\n            </span>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderThumbInner(item) {\r\n    const { onThumbnailError } = this.props;\r\n    const handleThumbnailError = onThumbnailError || this.handleImageError;\r\n\r\n    return (\r\n      <div className=\"image-gallery-thumbnail-inner\">\r\n        <img\r\n          className=\"image-gallery-thumbnail-image\"\r\n          src={item.thumbnail}\r\n          alt={item.thumbnailAlt}\r\n          title={item.thumbnailTitle}\r\n          onError={handleThumbnailError}\r\n        />\r\n        {\r\n          item.thumbnailLabel && (\r\n            <div className=\"image-gallery-thumbnail-label\">\r\n              {item.thumbnailLabel}\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      currentIndex,\r\n      isFullscreen,\r\n      modalFullscreen,\r\n      isPlaying,\r\n    } = this.state;\r\n\r\n    const {\r\n      additionalClass,\r\n      indexSeparator, // deprecate soon, and allow custom render\r\n      isRTL,\r\n      items,\r\n      thumbnailPosition,\r\n      renderFullscreenButton,\r\n      renderCustomControls,\r\n      renderLeftNav,\r\n      renderRightNav,\r\n      showBullets,\r\n      showFullscreenButton,\r\n      showIndex,\r\n      showThumbnails,\r\n      showNav,\r\n      showPlayButton,\r\n      renderPlayPauseButton,\r\n    } = this.props;\r\n\r\n    const thumbnailStyle = this.getThumbnailStyle();\r\n    const { slides, thumbnails, bullets } = this.getSlideItems();\r\n    const slideWrapperClass = clsx(\r\n      'image-gallery-slide-wrapper',\r\n      thumbnailPosition,\r\n      { 'image-gallery-rtl': isRTL },\r\n    );\r\n\r\n    const slideWrapper = (\r\n      <div ref={this.imageGallerySlideWrapper} className={slideWrapperClass}>\r\n        {renderCustomControls && renderCustomControls()}\r\n        {\r\n          this.canSlide() ? (\r\n            <React.Fragment>\r\n              {\r\n                showNav && (\r\n                  <React.Fragment>\r\n                    {renderLeftNav(this.slideLeft, !this.canSlideLeft())}\r\n                    {renderRightNav(this.slideRight, !this.canSlideRight())}\r\n                  </React.Fragment>\r\n                )\r\n              }\r\n              <Swipeable\r\n                className=\"image-gallery-swipe\"\r\n                delta={0}\r\n                onSwiping={this.handleSwiping}\r\n                onSwiped={this.handleOnSwiped}\r\n              >\r\n                <div className=\"image-gallery-slides\">\r\n                  {slides}\r\n                </div>\r\n              </Swipeable>\r\n            </React.Fragment>\r\n          ) : (\r\n            <div className=\"image-gallery-slides\">\r\n              {slides}\r\n            </div>\r\n          )\r\n        }\r\n        {showPlayButton && renderPlayPauseButton(this.togglePlay, isPlaying)}\r\n        {\r\n          showBullets && (\r\n            <div className=\"image-gallery-bullets\">\r\n              <div\r\n                className=\"image-gallery-bullets-container\"\r\n                role=\"navigation\"\r\n                aria-label=\"Bullet Navigation\"\r\n              >\r\n                {bullets}\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n        {showFullscreenButton && renderFullscreenButton(this.toggleFullScreen, isFullscreen)}\r\n        {\r\n          showIndex && (\r\n            <div className=\"image-gallery-index\">\r\n              <span className=\"image-gallery-index-current\">\r\n                {currentIndex + 1}\r\n              </span>\r\n              <span className=\"image-gallery-index-separator\">\r\n                {indexSeparator}\r\n              </span>\r\n              <span className=\"image-gallery-index-total\">\r\n                {items.length}\r\n              </span>\r\n            </div>\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n\r\n    const igClass = clsx('image-gallery', additionalClass, { 'fullscreen-modal': modalFullscreen });\r\n    const igContentClass = clsx('image-gallery-content', thumbnailPosition, { fullscreen: isFullscreen });\r\n    const thumbnailWrapperClass = clsx(\r\n      'image-gallery-thumbnails-wrapper',\r\n      thumbnailPosition,\r\n      { 'thumbnails-wrapper-rtl': !this.isThumbnailVertical() && isRTL },\r\n    );\r\n    return (\r\n      <div\r\n        ref={this.imageGallery}\r\n        className={igClass}\r\n        aria-live=\"polite\"\r\n      >\r\n        <div className={igContentClass}>\r\n          {(thumbnailPosition === 'bottom' || thumbnailPosition === 'right') && slideWrapper}\r\n          {\r\n            showThumbnails && (\r\n              <div\r\n                className={thumbnailWrapperClass}\r\n                style={this.getThumbnailBarHeight()}\r\n              >\r\n                <div\r\n                  className=\"image-gallery-thumbnails\"\r\n                  ref={this.thumbnailsWrapper}\r\n                >\r\n                  <div\r\n                    ref={this.thumbnails}\r\n                    className=\"image-gallery-thumbnails-container\"\r\n                    style={thumbnailStyle}\r\n                    aria-label=\"Thumbnail Navigation\"\r\n                  >\r\n                    {thumbnails}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n          {(thumbnailPosition === 'top' || thumbnailPosition === 'left') && slideWrapper}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import { useMedia } from 'react-media';\r\n\r\n\r\nconst useRWD = () => {\r\n    const GLOBAL_MEDIA_QUERIES = {\r\n        small: \"(max-width: 576px)\",\r\n        medium: \"(min-width: 577px) and (max-width: 960px)\",\r\n        large: \"(min-width: 960px)\"\r\n    };\r\n\r\n    const matches = useMedia({ queries: GLOBAL_MEDIA_QUERIES })\r\n\r\n    return matches\r\n}\r\n\r\nexport default useRWD;","import React, { useContext } from 'react';\r\n\r\nconst Global = React.createContext({\r\n    navHeight: 0,\r\n})\r\n\r\nconst useNavHeight = () => {\r\n    const global = useContext(Global)\r\n    return global.navHeight\r\n}\r\nexport default Global\r\nexport {\r\n    useNavHeight\r\n}","import React, { memo } from 'react';\r\n// import ImageGallery from 'react-image-gallery';\r\nimport ImageGallery from './imageGallery.js';\r\nimport \"./image-gallery.scss\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport useRWD from './RWD';\r\nimport {useNavHeight} from './Context.js'\r\n\r\nconst CustomImageRender = memo((props) => {\r\n  const small = Object.assign({}, props.item.cssSmall)\r\n  const notSmall = Object.assign({ \"objectFit\": \"contain\" }, props.item.css)\r\n  const matches = useRWD()\r\n\r\n  return <div>\r\n    <img alt={props.item.original} className='image-gallery-image' style={matches.small ? small : notSmall} src={props.item.original} />\r\n  </div>\r\n}, () => true)\r\n\r\nconst root_url = process.env.PUBLIC_URL;\r\nconst images = [\r\n  {\r\n    original: root_url + '/image/01.jpg',\r\n    cssSmall: {},\r\n    css: { \"objectFit\": \"contain\" },\r\n  }, {\r\n    original: root_url + '/image/02.jpg',\r\n    cssSmall: { \"object-position\": \"60%\" },\r\n    css: { \"objectFit\": \"contain\" }\r\n  }, {\r\n    original: root_url + '/image/03.jpg',\r\n    // cssSmall: { \"object-position\": \"65%\" },\r\n  }, {\r\n    original: root_url + '/image/04.jpg',\r\n  }, {\r\n    original: root_url + '/image/05.jpg',\r\n  }, {\r\n    original: root_url + '/image/06.jpg',\r\n    cssSmall: { \"object-position\": \"75%\" },\r\n  }, {\r\n    original: root_url + '/image/07.jpg',\r\n    cssSmall: { \"object-position\": \"35%\" },\r\n  },\r\n\r\n];\r\n\r\n\r\n\r\nfunction MyGallery() {\r\n\r\n  const navHeight = useNavHeight()\r\n  const matches =useRWD()\r\n  const styleHeight = window.innerHeight-navHeight\r\n  const MyFonts = createGlobalStyle` \r\n  .image-gallery-content .image-gallery-slide .image-gallery-image{\r\n    height:${styleHeight}px\r\n  }\r\n  `\r\n  const options = {\r\n    infinite: true,\r\n    showThumbnails: false,\r\n    showBullets: true,\r\n    autoPlay: true,\r\n    swipingTransitionDuration: 1000,\r\n    slideInterval: 3000,\r\n    slideDuration: matches.small?350:500,\r\n  }\r\n  return (<div style={{ backgroundColor: \"black\" }}>\r\n    <MyFonts/>\r\n    <ImageGallery {...options} showFullscreenButton={false} lazyLoad={false} items={images} renderItem={(item) => <CustomImageRender item={item} />} />\r\n  </div>)\r\n}\r\n\r\nexport default MyGallery","import React, { useEffect, useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport Stepper from 'bs-stepper'\r\nimport 'bs-stepper/dist/css/bs-stepper.min.css';\r\n\r\nconst StepGroup = forwardRef((props, ref) => {\r\n\r\n    const stepperRef = useRef()\r\n    const render = props.children.map(x => (0, x.type)(x.props))\r\n    const stepper = useRef()\r\n  \r\n    useImperativeHandle(ref, () => {\r\n      return {\r\n        \"getControl\": (() => stepper.current)\r\n      }\r\n    })\r\n  \r\n    useEffect(() => {\r\n      stepper.current = new Stepper(stepperRef.current)\r\n    }, [])\r\n  \r\n    return (<div ref={stepperRef} style={{position:\"relative\"}} className=\"bs-stepper\">\r\n      <div className=\"bs-stepper-header\">\r\n        {render.map(x => x.header)\r\n          .flatMap((x ,i)=> [x, (<div key={\"bs-stepper-header\"+i} className=\"line\"></div>)])\r\n          .slice(0, render.length * 2 - 1)}\r\n      </div>\r\n      <div className=\"bs-stepper-content\">\r\n        {props.children.map(x => (0, x.type)(x.props).content)}\r\n      </div>\r\n    </div>\r\n    )\r\n  })\r\n  \r\n  function StepHeader(props) {\r\n  \r\n    return (<div className=\"step\" data-target={\".\" + props.name}>\r\n      <button type=\"button\" className=\"step-trigger\"  >\r\n        <span className=\"bs-stepper-circle\">\r\n            {props.svg||1}\r\n        </span>\r\n        <span className=\"bs-stepper-label\">{props.header}</span>\r\n      </button>\r\n    </div>)\r\n  }\r\n  \r\n  function StepContent(props) {\r\n\r\n    return (<div {...props}>\r\n      <div className={\"content \" + props.name} >\r\n        {props.children}\r\n      </div>\r\n    </div>)\r\n  }\r\n  \r\n  /**\r\n   * This will make debug in react extension a little difficult\r\n   */\r\n  function Step(props) {\r\n    const name = props.name\r\n    const content = <StepContent style={props.style} name={name}>{props.children}</StepContent>\r\n    const header = <StepHeader {...props} />\r\n    return { header: header, content: content }\r\n  }\r\n\r\n  export{\r\n    StepGroup,\r\n    Step,\r\n  }","import React, { useState, useRef, forwardRef, Fragment } from 'react';\r\nimport FormContext from 'react-bootstrap/FormContext'\r\n\r\nimport { useForm, FormProvider, useFormContext } from \"react-hook-form\";\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\n\r\nimport { useNavHeight } from './Context.js'\r\nimport { Step, StepGroup } from \"./Step.js\";\r\nimport Swal from 'sweetalert2'\r\n\r\nconst useScroll = () => {\r\n    const htmlElRef = useRef(null)\r\n    const executeScroll = (minusOffset = 0) => window.scrollTo(0, htmlElRef.current.offsetTop - minusOffset)\r\n    return [executeScroll, htmlElRef]\r\n}\r\n\r\n\r\nconst Radio = forwardRef((props, ref) => {\r\n    const { errors } = useFormContext();\r\n    return (<div>\r\n        <Form.Group as={Col}>\r\n            <Form.Label>{props.title}<ErrorMsg error={errors[props.name]} /></Form.Label>\r\n            {props.option.map((x, index) => {\r\n                return <div>\r\n                    <Form.Check\r\n                        ref={ref}\r\n                        name={props.name}\r\n                        type=\"radio\"\r\n                        id={`${props.name}${index}`}\r\n                        label={x}\r\n                        value={x}\r\n                    />\r\n                </div>\r\n            })}\r\n\r\n        </Form.Group>\r\n    </div>)\r\n})\r\n\r\nfunction formatKey(obj) {\r\n    const newObj = {}\r\n    Object.entries(obj).map((x) => newObj[\"entry.\" + x[0]] = x[1])\r\n    return newObj\r\n}\r\n\r\n//this method only for flatten obj\r\nfunction toUrlParam(obj) {\r\n    // https://stackoverflow.com/questions/14525178/is-there-any-native-function-to-convert-json-to-url-parameters\r\n    return new URLSearchParams(obj).toString();\r\n}\r\n\r\n\r\nconst NumSpinner = forwardRef((props, ref) => {\r\n\r\n    const [value, setValue] = useState(0)\r\n    function add(num) {\r\n        setValue(value + num < 0 ? 0 : value + num)\r\n    }\r\n\r\n    return (<div className=\"input-group mb-3\">\r\n        <div className=\"input-group-prepend\">\r\n            <button className=\"btn btn-sm\" style={{ backgroundColor: \"#ffa9a9\" }} onClick={(e) => { e.preventDefault(); add(-1); return false }}><i style={{ color: \"white\" }} className=\"fa fa-minus\"></i></button>\r\n        </div>\r\n        <input ref={ref} type=\"number\" name={props.name} className=\"form-control form-control-sm\" value={value} min=\"0\" readOnly />\r\n        <div className=\"input-group-prepend\">\r\n            <button className=\"btn btn-sm\" style={{ backgroundColor: \"#ffa9a9\" }} onClick={(e) => { e.preventDefault(); add(1); return false }}><i style={{ color: \"white\" }} className=\"fa fa-plus\"></i></button>\r\n        </div>\r\n    </div>\r\n    )\r\n})\r\n\r\nconst NameControl = forwardRef((props, ref) => {\r\n    const context = React.useContext(FormContext)\r\n    return (<Fragment>\r\n        <Form.Control name={context.controlId} ref={ref} {...props} />\r\n    </Fragment>)\r\n})\r\n\r\n\r\nObject.byString = function (o, s) {\r\n    s = s.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\r\n    s = s.replace(/^\\./, '');           // strip a leading dot\r\n    var a = s.split('.');\r\n    for (var i = 0, n = a.length; i < n; ++i) {\r\n        var k = a[i];\r\n        if (k in o) {\r\n            o = o[k];\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n    return o;\r\n}\r\n\r\nconst ErrorMsg = (props) => { return <Fragment>{props.error && <p style={{ color: '#002bff', display: 'inline' }}>({props.error.message || \"Required\"})</p>}</Fragment> }\r\n\r\nconst Loading = (props) => {\r\n\r\n    const width = props.width || 50\r\n    const height = props.height || 50\r\n\r\n    return (\r\n        <div style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            \"align-items\": \"center\",\r\n            \"justify-content\": \"center\",\r\n            \"display\": props.hide ? \"none\" : \"flex\",\r\n        }}>\r\n            <svg width={width} height={height} viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\" stroke=\"#fa9caf\">\r\n                <g fill=\"none\" fill-rule=\"evenodd\">\r\n                    <g transform=\"translate(1 1)\" stroke-width=\"2\">\r\n                        <circle stroke-opacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\r\n                        <path d=\"M36 18c0-9.94-8.06-18-18-18\">\r\n                            <animateTransform\r\n                                attributeName=\"transform\"\r\n                                type=\"rotate\"\r\n                                from=\"0 18 18\"\r\n                                to=\"360 18 18\"\r\n                                dur=\"1s\"\r\n                                repeatCount=\"indefinite\" />\r\n                        </path>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CustomGoogleForm() {\r\n    const [disable, setDisable] = useState(false)\r\n    const methods = useForm({ mode: \"onBlur\" });\r\n    const { register, trigger, reset, getValues, errors, formState } = methods;\r\n    const navHeight = useNavHeight()\r\n\r\n    const [executeScroll, elementToScrollRef] = useScroll()\r\n\r\n    const FORM_URL = \"https://docs.google.com/forms/u/0/d/e/1FAIpQLSfS1K4cvOkUaQOr7SBKwu3cmL5G5j3t9NebJaANzsCqsqPAqQ/formResponse\";\r\n\r\n\r\n    // simple to get json\r\n    // FB_PUBLIC_LOAD_DATA_[1][1].map((x)=>{ return {a:x[1],b:x[4]}}).filter(x=>x.b).map(x=>{return {a:x.a,b:x.b[0][0]}})\r\n    // 0: {a: \"姓名\", b: 1097284387}\r\n    // 1: {a: \"是否願意與我們共進午宴？\", b: 2116115982}\r\n    // 2: {a: \"是否參加午宴前的證婚儀式？(地點同婚宴場地)\", b: 1596335383}\r\n    // 3: {a: \"您的聯絡電話是？\", b: 943713509}\r\n    // 4: {a: \"是否需要寄送喜帖？\", b: 788279090}\r\n    // 5: {a: \"請給我們您的喜帖寄送地址\", b: 953458254}\r\n    // 6: {a: \"我認識帥氣的 或是美麗的\", b: 246555755}\r\n    // 7: {a: \"您和新郎、新娘的關係是？\", b: 1865097167}\r\n    // 8: {a: \"當天出席人數\", b: 2044196324}\r\n    // 9: {a: \"是否需要兒童座椅與餐具\", b: 1492883860}\r\n    // 10: {a: \"是否需要素食餐點\", b: 749493017}\r\n    // 11: {a: \"我想說 . . .\", b: 1693858308}\r\n\r\n    const submit = data => {\r\n        setDisable(true)\r\n        const payload = Object.assign({}, { \"pageHistory\": [0, 1, 2] }, formatKey(data))\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: toUrlParam(payload)\r\n        };\r\n        // setTimeout(() => {\r\n        //     setDisable(false)\r\n        // }, 5000);\r\n        fetch(\"https://cors-anywhere.herokuapp.com/\" + FORM_URL, requestOptions)\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    Swal.fire(\r\n                        '2020/10/10 喬迪 & 奕潔 ',\r\n                        '一起來分享我們的喜悅吧！ 等你唷 ～',\r\n                        'success'\r\n                    )\r\n                    ref.current.getControl().to(1)\r\n                    reset({})\r\n                    return\r\n                }\r\n                throw response\r\n            }\r\n            )\r\n            .catch((err) => {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: '表單出現了一些問題 請晚點填寫 麻煩您。',\r\n                })\r\n            }).finally(\r\n                () => { setDisable(false) }\r\n            )\r\n    }\r\n\r\n    const ref = useRef()\r\n    // window.errors = errors\r\n    window.formState = formState\r\n\r\n    const validate = (names, callback) => {\r\n        return async () => await trigger(names) ? callback() : null\r\n    }\r\n    const step1Valids = [\"1097284387\", \"1596335383\", \"2116115982\", \"943713509\", \"788279090\"]\r\n    const step2Valids = [\"246555755\", \"1865097167\"]\r\n\r\n    const lastPageOffset = window.innerHeight * 23 / 100 + navHeight\r\n\r\n    //entry.1235456 will block the browser .\r\n    //see https://github.com/react-hook-form/react-hook-form/issues/2079\r\n    return (<div ref={elementToScrollRef} >\r\n\r\n        <FormProvider {...methods} >\r\n            <Form url={FORM_URL} onSubmit={(e) => { e.preventDefault(); submit(getValues()); executeScroll(navHeight) }}>\r\n                <div style={{ margin: \"15px\", textAlign: \"left\" }}>\r\n\r\n                    <StepGroup ref={ref}>\r\n                        <Step key=\"step1\" name=\"logins-part\" header=\"第一\" svg={<img alt=\"bride\" style={{ width: \"100%\" }} src={\"/image/bride.svg\"} />}>\r\n\r\n                            <Form.Group as={Col} controlId=\"1097284387\">\r\n                                <Form.Label>姓名 <ErrorMsg error={errors[\"1097284387\"]} /></Form.Label>\r\n                                <NameControl ref={register({ required: true })} test=\"5\" onChange={(x) => { }} placeholder=\"Name \" />\r\n                                <small className=\"form-text text-muted\">請填寫姓名 ，如: 沈佳宜   </small>\r\n                            </Form.Group>\r\n\r\n                            <Radio ref={register({ required: true })} name=\"2116115982\" title=\"是否願意與我們共進午宴？\"\r\n                                option={[\"一定要參加，拜託算我一份！\", \"禮到人不到，請還是寄喜帖給我噢！\", \"可惜無法出席，祝福的心與新人同在！\"]} />\r\n                            <Radio ref={register({ required: true })} name=\"1596335383\" title=\"是否參加午宴前的證婚儀式？(同婚宴場地-池畔教堂)\"\r\n                                option={[\"我要參加！到場見證幸福時刻！\", \"無法出席，獻上最誠摯的祝福！\"]} />\r\n\r\n                            <Form.Group as={Col} controlId=\"943713509\">\r\n                                <Form.Label>電話<ErrorMsg error={errors[\"943713509\"]} /></Form.Label>\r\n                                <NameControl ref={register({\r\n                                    required: true,\r\n                                    pattern: {\r\n                                        value: /^0[0-9]{9}$/,\r\n                                        message: \"電話號碼不正確\"\r\n                                    }\r\n                                })} placeholder=\"phone number\" />\r\n\r\n                            </Form.Group>\r\n\r\n                            <Radio ref={register({ required: true })} name=\"788279090\" title=\"是否需要寄送喜帖？\" option={[\"我想收到紙本喜帖，請寄給我\", \"婚禮相關資訊我都知道了，不用特別寄喜帖給我囉\"]} />\r\n\r\n                            <Form.Group as={Col} controlId=\"953458254\">\r\n                                <Form.Label>請給我們您的喜帖寄送地址</Form.Label>\r\n                                <small className=\"form-text text-muted\">只有需要收到紙本喜帖的人才需填寫，郵遞區號不要忘記囉，謝謝！</small>\r\n                                <NameControl name=\"953458254\" ref={register} placeholder=\"address\" />\r\n                            </Form.Group>\r\n\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <Button onClick={validate(step1Valids, () => {\r\n                                    if (getValues(\"2116115982\") === \"一定要參加，拜託算我一份！\") {\r\n                                        ref.current.getControl().next();\r\n                                        executeScroll(navHeight)\r\n                                    }\r\n                                    else {\r\n                                        ref.current.getControl().to(3);\r\n                                        executeScroll(lastPageOffset)\r\n                                    }\r\n                                })}  >下一步</Button>\r\n                            </div>\r\n\r\n                        </Step>\r\n\r\n\r\n\r\n\r\n                        <Step key=\"step2\" name=\"information-part\" header=\"第二\" svg={<img alt=\"ring\" style={{ width: \"100%\" }} src={\"/image/ring.svg\"} />}>\r\n\r\n                            <Radio ref={register({ required: true })} name=\"246555755\" title=\"我認識帥氣的 或是美麗的 \" option={[\"新郎\", \"新娘\"]} />\r\n\r\n                            <Form.Group as={Col} controlId=\"1865097167\">\r\n                                <Form.Label>您和新郎、新娘的關係是？<ErrorMsg error={errors[\"1865097167\"]} /></Form.Label>\r\n                                <NameControl style={{ color: \"#ffa9a9\" }} ref={register({ required: true })} as=\"select\" custom>\r\n                                    <option></option>\r\n                                    <option>國中同學</option>\r\n                                    <option>高中同學</option>\r\n                                    <option>大學同學</option>\r\n                                    <option>親友</option>\r\n                                    <option>同事</option>\r\n                                    <option>其他朋友</option>\r\n                                </NameControl>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"2044196324\">\r\n                                <Form.Label>當天出席人數</Form.Label>\r\n                                <small className=\"form-text text-muted\">請填入包含自己在內的人數 ( 不包含兒童椅人數，如需兒童座椅請在下題填寫 )</small>\r\n                                <NumSpinner ref={register} name=\"2044196324\" />\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"1492883860\">\r\n                                <Form.Label>是否需要兒童座椅與餐具</Form.Label>\r\n                                <small className=\"form-text text-muted\">需要的朋友請填寫數量，單身者請跳過</small>\r\n                                <NumSpinner ref={register} name=\"1492883860\" />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Col} controlId=\"749493017\">\r\n                                <Form.Label>是否需要素食餐點</Form.Label>\r\n\r\n                                <small className=\"form-text text-muted\">需要的朋友請填寫素食餐點數量，吃肉的朋友請跳過</small>\r\n                                <NumSpinner ref={register} name=\"749493017\" />\r\n                            </Form.Group>\r\n\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <Button onClick={validate(step2Valids, () => { ref.current.getControl().next(); executeScroll(lastPageOffset) })}  >下一步</Button>\r\n                            </div>\r\n                        </Step>\r\n\r\n\r\n\r\n\r\n\r\n                        <Step key=\"step3\" style={{ position: \"relative\" }} name=\"information-part3\" header=\"第三\" svg={<img alt=\"groom\" style={{ width: \"100%\" }} src={\"/image/groom.svg\"} />}>\r\n                            <div>\r\n                                <p style={{ textAlign: \"center\", color: \"#ffa9a9\" }}>\r\n                                    很謝謝您的填寫，最後有什麼話想趁機對我們告白的都可以說哦!!!\r\n                                </p>\r\n                                <Form.Group as={Col} controlId=\"1693858308\">\r\n                                    <Form.Label>我想說 . . .</Form.Label>\r\n                                    <NameControl ref={register} placeholder=\"I wanna say ~\" />\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <Button variant=\"primary\" type=\"submit\" disabled={disable}> 送出</Button>\r\n                            </div>\r\n                            <Loading hide={!disable} />\r\n                        </Step>\r\n\r\n                    </StepGroup>\r\n\r\n\r\n                </div>\r\n                {/* //for test purpose\r\n                <Button onClick={() => ref.current.getControl().previous()} >上一個</Button>\r\n                <Button onClick={() => ref.current.getControl().next()} >下一個</Button>\r\n                <Button variant=\"primary\" type=\"submit\"> Submit</Button> */}\r\n\r\n            </Form>\r\n        </FormProvider>\r\n\r\n    </div>)\r\n}\r\n\r\nexport default CustomGoogleForm","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Loading = (props) => {\r\n\r\n    const width = props.width || 50\r\n    const height = props.height || 50\r\n\r\n    return (<div style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        \"align-items\": \"center\",\r\n        \"justify-content\": \"center\",\r\n        \"display\": props.hide ? \"none\" : \"flex\",\r\n    }}>\r\n        <img src=\"/image/loading.svg\"></img >\r\n    </div>\r\n    )\r\n}\r\n// Loading.propTypes = {\r\n//     width: PropTypes.number,\r\n//     height: PropTypes.number,\r\n// };\r\n\r\nexport {\r\n    Loading\r\n}","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport Masonry from 'react-masonry-css'\r\nimport {Loading} from './Util.js'\r\n\r\nfunction Bless() {\r\n\r\n    const url = \"https://script.google.com/macros/s/AKfycbyFyQ6OrCWSRDdE28OfXwhHsExDhPNDdx6qHCsD3GlyE8RjedEL/exec\"\r\n  \r\n    // const Colors = [\"#79e1d1\", \"#ffc0c0\", \"#9fd9ff\", \"#ffc0f6\"]\r\n    // const test = [{ \"name\": \"黃__\", \"time\": \"2020-06-08T10:46:57.130Z\", \"msg\": \"欠揍啊!!\" }, { \"name\": \"石_\", \"time\": \"2020-06-10T09:39:34.320Z\", \"msg\": \"10月10號見阿\" }, { \"name\": \"G_\", \"time\": \"2020-06-12T09:51:34.205Z\", \"msg\": \"恭喜你們\" }, { \"name\": \"余__\", \"time\": \"2020-06-12T14:58:26.484Z\", \"msg\": \"I love you\" }, { \"name\": \"黃__\", \"time\": \"\", \"msg\": \"祝你們幸福\" }, { \"name\": \"你__\", \"time\": \"\", \"msg\": \"這是測試\" }, { \"name\": \"你______\", \"time\": \"\", \"msg\": \"哇哇哇\" }]\r\n  \r\n\r\n    // const [data, setData] = useState(test);\r\n    const [data, setData] = useState([]);\r\n    const [init, setInit] = useState(true);\r\n\r\n    async function initData() {\r\n      // setTimeout(() => {\r\n      //   setData([{name:123,msg:234}]);\r\n      //   setInit(false)\r\n      // }, 5000);\r\n      const result = await axios.get(url);\r\n      setData(result.data);\r\n      setInit(false)\r\n    }\r\n    \r\n    useEffect(() => {\r\n      initData()\r\n    }, []);\r\n  \r\n  \r\n    const breakpointColumnsObj = {\r\n      default: 4,\r\n      1100: 3,\r\n      700: 2,\r\n      500: 1\r\n    };\r\n  \r\n    return (<div style={{position:\"relative\"}}>\r\n      <div style={{postiion:\"relative\",width:\"100%\" ,height:\"80pt\",display:init?\"block\":\"none\"}}>\r\n        <Loading hide={!init}/>\r\n      </div>\r\n\r\n      <Masonry\r\n        breakpointCols={breakpointColumnsObj}\r\n        className=\"my-masonry-grid\"\r\n        columnClassName=\"my-masonry-grid_column\"\r\n      >\r\n        {data.map((x, index) => {\r\n          return <Card key={\"card\"+index} style={{ backgroundColor: \"#ffa9a9\", borderRadius: \"15px\", color: \"white\" }} className=\"text-center\">\r\n            <Card.Body>\r\n              <Card.Title>{x.name}</Card.Title>\r\n              <Card.Text>\r\n                {x.msg}\r\n              </Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        })}\r\n      </Masonry>\r\n    </div>\r\n    )\r\n  }\r\n\r\n\r\n  export default Bless","import React, { useState, useEffect, useRef, useLayoutEffect } from 'react';\r\nimport {  Row, Col, Container } from 'react-bootstrap';\r\n\r\nvar iOS = /iPad|iPhone|iPod/.test(navigator.platform || \"\");\r\n// alert(\"ios:\"+iOS)\r\nfunction useWindowSize() {\r\n    const [size, setSize] = useState([0, 0]);\r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            setSize([window.innerWidth, window.innerHeight]);\r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n}\r\n\r\nfunction GoogleMap() {\r\n    return (\r\n        <div className=\"embed-responsive embed-responsive-16by9\">\r\n            <iframe title=\"Our Wedding\" className=\"embed-responsive-item\" src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3615.428532805623!2d121.28429391523086!3d25.01952718397909!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x34681fe08337ca2d%3A0xd64b020f349786d!2z55qH5a626JaH5bqtUm95YWwgV2VkZGluZ-WpmuWutOacg-mkqA!5e0!3m2!1szh-TW!2stw!4v1591897882905!5m2!1szh-TW!2stw\" frameBorder=\"0\" allowFullScreen=\"\" aria-hidden=\"false\" tabIndex=\"0\"></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Info() {\r\n    const fixWidth = 600\r\n    const ref = useRef(null);\r\n    const [width] = useWindowSize();\r\n    const [zoom, setZoom] = useState(1.0);\r\n\r\n    useEffect(() => {\r\n        const zoom =ref.current.offsetWidth * 90 / 100 / fixWidth\r\n        \r\n        setZoom(zoom>0.9?0.9:zoom)\r\n        \r\n    }, [width])\r\n    \r\n    const ios=(i)=>{\r\n        return (iOS ? i*5/7 : i)+\"pt\"\r\n    }\r\n    return (\r\n        <div style={{ width: \"90%\", \"margin\": \"45pt auto\" }}>\r\n            <Row sm={1} md={2}>\r\n                <Col md={7} ref={ref}>\r\n                    <div style={{\r\n                        backgroundImage: \" url('\" + process.env.PUBLIC_URL + \"/image/bg.jpg')\",\r\n                        width: \"450pt\",\r\n                        height: \"500pt\",\r\n                        margin: \"0 auto\",\r\n                        border: \"solid\",\r\n                        borderWidth: \"5pt\",\r\n                        borderColor: \"#fbeaea\",\r\n                        borderRadius: \"30pt\",\r\n                        color: \"#f88080\",\r\n                        fontFamily: \"DFKai-sb\",\r\n                        left: 0,\r\n                        right: 0,\r\n                        fontSize:\"15pt\",\r\n                        zoom: zoom,\r\n                    }}>\r\n                        <br />\r\n                        <br />\r\n                        <Container>\r\n                            <Row style={{ fontSize: ios(25), fontFamily: \"customTTF\" }}><Col>~ 我們要結婚啦 ~</Col></Row>\r\n                            <br />\r\n                            <Row><Col style={{ fontSize: ios(35), color: \"red\", fontFamily: \"customTTF\" }}>麥喬迪 & 余奕潔</Col></Row>\r\n                            <br />\r\n                            <Row>\r\n                                <Col>舉辦時間</Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>2020/10/10 星期六 中午 12:00</Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>證婚儀式</Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>2020/10/10 星期六 中午 11:00</Col>\r\n                            </Row>\r\n                            <br />\r\n                            {/* where bootreact didn't support col-3  */}\r\n                            <div className=\"justify-content-center row\">\r\n                                <div className=\"col-3\">男方家長<br />麥耘欽<br />吳秀美</div>\r\n                                <div className=\"col-3\">女方家長<br />姜素雲</div>\r\n                            </div>\r\n                        </Container>\r\n                        <br />\r\n                        <div>地點</div>\r\n                        <div>330桃園市桃園區莊敬路二段369號</div>\r\n                    </div>\r\n                    <br />\r\n\r\n                </Col>\r\n              \r\n                <Col md=\"4\">\r\n                    <Container>\r\n                        <Row>\r\n                            <Col >地點  : 330桃園市桃園區莊敬路二段369號\r\n                                <div className=\"justify-content-center\" style={{ \"maxWidth\": \"450pt\" ,margin:\"0 auto\"}}>  <GoogleMap /></div>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{marginTop:\"20pt\"}}>\r\n                                <div>使用手機查看 </div>\r\n                                <img alt=\"qrcode\" style={{ \"width\": \"90%\", \"maxWidth\": \"150pt\" }} src={process.env.PUBLIC_URL + \"/image/qrcode.svg\"} /></Col>\r\n\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Info","import React, { useState, useEffect, useRef, useLayoutEffect ,Fragment } from 'react';\r\n\r\n\r\nimport MyGallery from './MyGallery.js'\r\nimport {  Navbar, Nav } from 'react-bootstrap';\r\n\r\nimport CustomGoogleForm from './Form.js'\r\nimport Bless from './Bless.js'\r\nimport useRWD from './RWD';\r\nimport Info from './Info.js';\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport Global ,{useNavHeight} from './Context.js'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport TypeIt from \"typeit-react\";\r\n\r\nconst MyFonts = createGlobalStyle` \r\n@font-face { \r\n  font-family: 'customTTF';\r\n  src: url(/font/ChaoZiSheShiGuangJianFan-2.subset.ttf);\r\n}\r\n`\r\nfunction Youtube() {\r\n  return (\r\n    <div className=\"embed-responsive embed-responsive-16by9\">\r\n      <iframe height=\"2000\" width=\"2000\" title=\"wedding video\" style={{ \"borderRadius\": \"20px\" }} className=\"embed-responsive-item\" src=\"https://www.youtube.com/embed/ewiH86tuwsI?rel=0&playsinline=1&autoplay=0&controls=1&modestbranding=1\" frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen={true}></iframe>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nfunction NavBar(props) {\r\n  // const [height, setHeight] = useState(null)\r\n  const LENGTH = 24\r\n  const ref = useRef(null)\r\n\r\n  const [width,height] = useDomSize(ref)\r\n  const onHeightChnage=props.onHeightChnage\r\n  useEffect(() => {\r\n    onHeightChnage(height)\r\n  },[onHeightChnage,height])\r\n\r\n  return (\r\n    <Navbar ref={ref} style={{ backgroundColor: \"#071740\" }} sticky={\"top\"} collapseOnSelect bg=\"light\" fixed=\"top\" >\r\n      <Navbar.Brand href=\"#gallery\">\r\n        <div className={\"d-block d-sm-none\"} style={{ width: \"60pt\" }}>\r\n          <p width=\"\">Geordie <span style={{ position: \"relative\", top: \"8pt\", left: \"-35pt\", opacity: 0.5 }}>Winnie</span>\r\n          </p>\r\n        </div>\r\n        <span className=\"d-none d-sm-block\">Geordie & Winnie</span>\r\n      </Navbar.Brand>\r\n\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link href=\"#info\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height={LENGTH} viewBox=\"0 0 24 24\" width={LENGTH}><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"></path></svg>\r\n          <div className=\" d-sm-inline text-nowrap\"><span className=\"d-none d-md-inline\">婚禮</span>資訊</div>\r\n        </Nav.Link>\r\n        <Nav.Link href=\"#form\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" enableBackground=\"new 0 0 24 24\" height={LENGTH} viewBox=\"0 0 24 24\" width={LENGTH}><g><rect fill=\"none\" height=\"24\" width=\"24\"></rect></g><g><g><path d=\"M20,3H4C2.9,3,2,3.9,2,5v14c0,1.1,0.9,2,2,2h16c1.1,0,2-0.9,2-2V5 C22,3.9,21.1,3,20,3z M10,17H5v-2h5V17z M10,13H5v-2h5V13z M10,9H5V7h5V9z M14.82,15L12,12.16l1.41-1.41l1.41,1.42L17.99,9 l1.42,1.42L14.82,15z\" fillRule=\"evenodd\"></path></g></g></svg>\r\n          <div className=\" d-sm-inline text-nowrap\"><span className=\"d-none d-md-inline\">參加</span>表單</div>\r\n        </Nav.Link>\r\n        <Nav.Link href=\"#bless\">\r\n          <svg height={LENGTH - 2} width={LENGTH - 2} viewBox=\"0 0 16 16\" className=\"bi bi-chat-square-text-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <path fillRule=\"evenodd\" d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.5a1 1 0 0 0-.8.4l-1.9 2.533a1 1 0 0 1-1.6 0L5.3 12.4a1 1 0 0 0-.8-.4H2a2 2 0 0 1-2-2V2zm3.5 1a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1h-9zm0 2.5a.5.5 0 0 0 0 1h9a.5.5 0 0 0 0-1h-9zm0 2.5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1h-5z\"></path>\r\n          </svg>\r\n          <div className=\"d-sm-inline text-nowrap\"><span className=\"d-none d-md-inline\">大家的</span>祝福</div>\r\n        </Nav.Link>\r\n        <Nav.Link href=\"#youtube\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" height={LENGTH} viewBox=\"0 0 24 24\" width={LENGTH}><path d=\"M0 0h24v24H0z\" fill=\"none\"></path><path d=\"M18 4l2 4h-3l-2-4h-2l2 4h-3l-2-4H8l2 4H7L5 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4h-4z\"></path></svg>\r\n          <div className=\" d-sm-inline text-nowrap\">婚紗側錄</div>\r\n        </Nav.Link>\r\n      </Nav>\r\n\r\n    </Navbar>);\r\n}\r\n\r\n\r\nfunction useDomSize(ref) {\r\n  const [size, setSize] = useState([0, 0]);\r\n  useLayoutEffect(() => {\r\n    const elem = ref.current\r\n    function updateSize() {\r\n      setSize([elem.offsetWidth, elem.offsetHeight]);\r\n    }\r\n    window.addEventListener('resize', updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener('resize', updateSize);\r\n  }, [ref]);\r\n  return size;\r\n}\r\n\r\nconst Link = (props) => {\r\n  const navHeight =useNavHeight()\r\n  const minus = props.minus||0\r\n  const fromTop= minus+navHeight\r\n\r\n  return (<a id={props.id} style={{top:`-${fromTop}px`,\"visibility\":\"visible\"}} className=\"link\"></a>)\r\n}\r\n\r\nconst ParallaxImg= (props)=>{\r\n  const matches = useRWD()\r\n  return(<Fragment>\r\n          {matches.small?<div class=\"parallax\" style={{position:\"relative\",height:\"auto\" ,backgroundImage: `url(${props.src})`}}>\r\n            <img alt={props.src} src={props.src} style={{\"width\":\"100%\"}}/>\r\n            {props.children}\r\n          </div> :\r\n        <div className=\"parallax\" style={{ position:\"relative\",backgroundImage: `url(${props.src})`}}>{props.children}</div>}\r\n  </Fragment>)\r\n}\r\n\r\n// const TyppingText=()=>{\r\n//   const msgs=  [\r\n//     \"那些年錯過的大雨\",\r\n//     \"那些年錯過的愛情\",\r\n//     \"好想擁抱你  擁抱錯過的勇氣\",\r\n//     \"曾經想征服全世界\",\r\n//     \"到最後回首才發現\",\r\n//     \"這世界滴滴點點全部都是你\",\r\n//     \"再一次相遇我會緊緊抱著你\",\r\n//   ]\r\n//     const ref = useRef(null)\r\n//   return ( <div ref={ref} className=\"line\">  \r\n//      <TypeIt getAfterInit={instance=>ref.current.classList.add(\"afterline\")} \r\n    \r\n//     getBeforeInit={instance => {\r\n//       window.a=instance\r\n      \r\n//       instance\r\n//         .type(\"那些年錯過的大雨  123\",{breakLines:false})\r\n//         .type(\"123456\")\r\n//         .pause(750)\r\n//         .delete(2)\r\n//         .pause(500)\r\n//         .type(\"ex!\");\r\n  \r\n//       // Remember to return it!\r\n//       return instance;\r\n//     }}\r\n//     options={{\r\n//       cursorChar:\"...\",\r\n//       speed: 120,\r\n//       waitUntilVisible: true,\r\n//       breakLines:true,\r\n//     }}\r\n//   /></div>\r\n// //   <TypeIt\r\n// //   options={{cursor:false}}\r\n// //   getBeforeInit={instance => {\r\n// //     window.a=instance\r\n    \r\n// //     instance\r\n// //       .type(\"Hi, I'm Alxe\")\r\n// //       .pause(750)\r\n// //       .delete(2)\r\n// //       .pause(500)\r\n// //       .type(\"ex!\");\r\n\r\n// //     // Remember to return it!\r\n// //     return instance;\r\n// //   }}\r\n// // />\r\n  \r\n//   )\r\n// }\r\n\r\nfunction ImagePage() {\r\n  const matches =useRWD()\r\n  return (<div>\r\n    <Link id=\"info\" />\r\n    <Info />\r\n\r\n    <ParallaxImg src=\"/image/background/resize/20170226_145228-c.jpg\" />\r\n\r\n\r\n    <Link id=\"form\" />\r\n    <div style={{ textAlign: \"center\", \"margin\": \"0 auto\", maxWidth: \"900px\" }}>\r\n      <CustomGoogleForm/>\r\n    </div>\r\n\r\n    <ParallaxImg src=\"/image/background/resize/07-c.jpg\">\r\n          {/* <div style={{\"fontFamily\": \"DFKai-sb\",position:\"absolute\",left:\"15pt\" ,top:\"15pt\",color:\"white\"}}> <TyppingText/>  </div> */}\r\n\r\n      <div style={{position:\"absolute\",left:0 ,top:\"50%\",width:\"100%\" ,textAlign:\"center\"}}>\r\n          <span style={{backgroundColor:\"#434343\", color:\"white\",\"letterSpacing\":\"4px\",fontSize:\"13px\",padding:\"13px\",opacity:\"80%\"}}>\r\n              Try to find where it is !!!!\r\n            </span>\r\n        </div>\r\n    </ParallaxImg>\r\n\r\n\r\n    <Link id=\"bless\" />\r\n    <div style={{ \"fontFamily\": \"DFKai-sb\", textAlign: \"center\" }}>\r\n\r\n      <div style={{ margin: \"30px 45px\" }}>\r\n        <div style={{ fontSize: \"35px\", color: \"#ffa9a9\" }} >\r\n          感謝大家的祝福\r\n       </div>\r\n        <Bless />\r\n      </div>\r\n    </div>\r\n    <ParallaxImg src=\"/image/background/resize/20180211_191422-c.jpg\"/>\r\n    {/* <div class=\"parallax\" style={{ backgroundImage: \"url(/img/20180211_191422.jpg\" }}></div> */}\r\n    {matches.small\r\n    ?<Link id=\"youtube\" minus={window.innerHeight*23/100} />\r\n    :<Link id=\"youtube\"  />\r\n    }\r\n     <div>\r\n      <div style={{ textAlign: \"center\", padding: \"5% 10%\", backgroundColor: \"black\" }}><Youtube /> </div>\r\n    </div>\r\n    <ParallaxImg src=\"/image/background/resize/20180211_201046-c.jpg\"/>\r\n    {/* <div class=\"parallax\" style={{ backgroundImage: \"url(/img/20180211_201046.jpg\" }}></div> */}\r\n  </div>)\r\n}\r\n\r\nfunction App() {\r\n    const matches =useRWD()\r\n    const [navHeight, setNavHeight] = useState(0)\r\n  return (\r\n    <div className=\"App\">\r\n      <MyFonts />\r\n      <div style={{ \"width\": \"100%\" }}>\r\n        <NavBar onHeightChnage={(height)=>{setNavHeight(height)}}/>\r\n\r\n        <Global.Provider value={{navHeight: navHeight}}>\r\n            <Link id=\"gallery\"/> \r\n            <MyGallery />\r\n            <ImagePage />\r\n       </Global.Provider>\r\n\r\n        <footer style={{\"backgroundColor\":\"black\" ,position:\"relative\"}}> \r\n          <div style={{padding:\"5px\", color:\"white\"}}> \r\n                       \r\n              {matches.small?<Fragment/>: <Fragment><span>Website Created by </span><a href=\"https://github.com/g1geordie\"> Geordie</a></Fragment>      }\r\n\r\n              {matches.small? <div >Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n: <div style={{display:\"inline\",position:\"absolute\",right:\"10px\"}}>Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>}               \r\n\r\n          </div>  \r\n         </footer>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconsole.log(\"%c謝謝你的祝福\",\"color:red;font-size:80px\")\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}